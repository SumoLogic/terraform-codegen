paths:
  v1:
    uploadFile:
      post:
        tags:
          - lookupManagement
        summary: Upload a CSV file.
        description: Create a request to populate a lookup table with a CSV file.
        operationId: uploadFile
        parameters:
          - name: id
            description: Identifier of the lookup table to populate.
            required: true
            in: path
            schema:
              type: string
              example: 0000000001C41EE4
          - name: merge
            description: >-
              This indicates whether the file contents will be merged with existing data in the lookup table or not. If
              this is true then data with the same primary keys will be updated while the rest of the rows will be appended. By
              default, merge is false. The response includes a request identifier that you need to use in the
              [Request Status API](#operation/requestStatus) to track the status of the upload request.
            in: query
            schema:
              type: boolean
              default: false
              example: true
        requestBody:
          content:
            multipart/form-data:
              schema:
                required:
                  - file
                properties:
                  file:
                    type: string
                    description: >-
                      The CSV file to upload.
                        - The size limit for the CSV file is 100MB.
                        - Use Unix format, with newlines ("\n") separating rows.
                        - The first row should contain headers that match the lookup table schema. Matching is
                          case-insensitive.
                    format: binary
          required: true
        responses:
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
          200:
            description: The upload request was accepted. Use the provided token in a status request to track the status
              of the upload.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/LookupRequestToken'

    lookupTables:
      post:
        tags:
          - lookupManagement
        summary: Create a lookup table.
        description: >-
          Create a new lookup table by providing a schema and specifying its configuration. Providing either parentFolderId
          or contentPath is mandatory. If both parentFolderId and contentPath are provided and point to different
          paths in the Library, the parentFolderId is given preference.
        operationId: createTable
        parameters: []
        requestBody:
          description: The schema and configuration for the lookup table.
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupTableDefinition'

        responses:
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
          200:
            description: Lookup table created successfully.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/LookupTable'

    truncateTable:
      post:
        tags:
          - lookupManagement
        summary: Empty a lookup table.
        description: >-
          Delete all data from a lookup table.
        operationId: truncateTable
        parameters:
          - name: id
            description: Identifier of the table to clear.
            required: true
            in: path
            schema:
              type: string
              example: 0000000001C41EE4
        responses:
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
          200:
            description: The delete data request was accepted. Use the provided token in a status
               request to track the status of the delete.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/LookupRequestToken'

    updateLookupTableRow:
      put:
        tags:
          - lookupManagement
        summary: Insert or Update a lookup table row.
        description: >-
          Insert or update a row of a lookup table with the given identifier.
          A new row is inserted if the primary key does not exist already, otherwise the existing row with the specified primary key is updated.
          All the fields of the lookup table are required and will be updated to the given values.
          In case a field is not specified then it will be assumed to be set to null.
          If the table size exceeds the maximum limit of 100MB then based on the size limit action of the table
          the update will be processed or discarded.
        operationId: updateTableRow
        parameters:
          - name: id
            in: path
            description: Identifier of the lookup table.
            schema:
              type: string
              example: 0000000001C41EE4
        requestBody:
          description: Lookup table row update definition.
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RowUpdateDefinition'
        responses:
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
          200:
            description: Row updated successfully.

    lookupTableById:
      get:
        tags:
          - lookupManagement
        summary: Get a lookup table.
        description: Get a lookup table for the given identifier.
        operationId: lookupTableById
        parameters:
          - name: id
            in: path
            description: Identifier of the lookup table.
            schema:
              type: string
              example: 0000000001C41EE4
        responses:
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
          200:
            description: Definition of the lookup table.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/LookupTable'
      put:
        tags:
          - lookupManagement
        summary: Edit a lookup table.
        description: >-
          Edit the lookup table data. All the fields are mandatory in the request.
        operationId: updateTable
        parameters:
          - name: id
            in: path
            description: Identifier of the lookup table.
            schema:
              type: string
              example: 0000000001C41EE4
        requestBody:
          description: The configuration changes for the lookup table.
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupUpdateDefinition'
        responses:
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
          200:
            description: Configuration updated successfully.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/LookupTable'

      delete:
        tags:
          - lookupManagement
        summary: Delete a lookup table.
        description: Delete a lookup table completely.
        operationId: deleteTable
        parameters:
          - name: id
            description: Identifier of the lookup table.
            required: true
            in: path
            schema:
              type: string
              example: 0000000001C41EE4
        responses:
          '204':
            description: Deletion successful.
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

    jobs:
      status:
        get:
          tags:
            - lookupManagement
          summary: Get the status of an async job.
          description: >-
            Retrieve the status of a previously made request. If the request was successful, the status of the response
            object will be `Success`.
          operationId: requestJobStatus
          parameters:
            - name: jobId
              in: path
              description: An identifier returned in response to an asynchronous request.
              required: true
              schema:
                type: string
                example: 0000000001C41AA3
          responses:
            default:
              description: Operation failed with an error.
              content:
                application/json:
                  schema:
                    $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
            200:
              description: The status of async job with given identifier.
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/LookupAsyncJobStatus'

      finished:
        get:
          tags:
            - lookupManagement
          x-visibility: private
          summary: finished jobs status.
          description: Status of finished asynchronous jobs for the lookup table with the given identifier.
          operationId: getFinishedJobs
          parameters:
            - name: id
              in: path
              description: The identifier of the lookup table to get recent jobs.
              required: true
              schema:
                type: string
                example: 0000000001C41EE4
            - name: limit
              description: Limit the number of finished jobs status returned in the response. The number of jobs status returned may be less than the `limit`.
              in: query
              schema:
                type: integer
                format: int32
                default: 10
                example: 20
                minimum: 1
                maximum: 100
          responses:
            default:
              description: Operation failed with error
              content:
                application/json:
                  schema:
                    $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
            200:
              description: Status of last 10 asynchronous jobs for the lookup table returned.
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/LookupAsyncJobStatus'

      unfinished:
        get:
          tags:
            - lookupManagement
          x-visibility: private
          summary: Unfinished jobs status.
          description: Status of unfinished asynchronous jobs for the lookup table with the given identifier.
          operationId: getUnfinishedJobs
          parameters:
            - name: id
              in: path
              description: The identifier of the lookup table to get unfinished jobs.
              required: true
              schema:
                type: string
                example: 0000000001C41EE4
          responses:
            default:
              description: Operation failed with error
              content:
                application/json:
                  schema:
                    $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
            200:
              description: Status of unfinished asynchronous jobs for the lookup table returned.
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/LookupAsyncJobStatus'

    exportTable:
      get:
        tags:
          - lookupManagement
        x-visibility: private
        summary: Export a lookup table.
        description: Request an export of a lookup table. The response includes a request identifier that you need to
          use in the [Request Status API](#operation/requestStatus) to retrieve the table.
        operationId: exportTable
        parameters:
          - name: id
            in: path
            description: The identifier of the lookup table to export.
            schema:
              type: string
              example: 0000000001C41EE4
        responses:
          default:
            description: Operation failed with error
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
          200:
            description: Request was accepted successfully. Use the job identifier to track status of the request.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/LookupRequestToken'

    previewData:
      get:
        tags:
          - lookupManagement
        x-visibility: private
        summary: Preview of the lookup table.
        description: Returns a few rows to preview the lookup data.
        operationId: lookupPreviewData
        parameters:
          - name: id
            in: path
            description: The identifier of the lookup table to preview.
            schema:
              type: string
              example: 0000000001C41EE4
        responses:
          default:
            description: Operation failed with error
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
          200:
            description: A list of the first few rows of the requested lookup table.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/LookupPreviewData'

components:
  schemas:
    LookupTable:
      description: Lookup table definition and metadata.
      type: object
      required:
        - id
      allOf:
        - $ref: './generic-models.yml#/components/schemas/MetadataModel'
        - $ref: '#/components/schemas/LookupTableDefinition'
        - properties:
            id:
              description: Identifier of the lookup table as a content item.
              type: string
              example: 0000000001C41EE4
            contentPath:
              description: >-
                Address/path of the parent folder of this lookup table in content library. For example, a lookup table existing 
                in the personal/lookupTable folder for user johndoe would be: /Library/Users/johndoe@acme.com/lookupTable
              type: string
              example: /Library/Users/johndoe@acme.com/lookupTable

    LookupTableDefinition:
      description: Definition of the lookup table.
      type: object
      required:
        - name
        - parentFolderId
      allOf:
      - $ref: '#/components/schemas/ExportableLookupTableInfo'
      - properties:
          name:
            description: The name of the lookup table.
            type: string
            maxLength: 255
            example: SampleLookupTable
          parentFolderId:
            description: >-
              The parent-folder-path identifier of the lookup table in the Library.
            type: string
            example: 0000000001C41EE4

    ExportableLookupTableInfo:
      description: The lookup table definition independent of its location in the Library and name.
      type: object
      required:
        - description
        - fields
        - primaryKeys
      properties:
        description:
          description: The description of the lookup table.
          type: string
          example: This is a sample lookup table description.
        fields:
          description: The list of fields in the lookup table.
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/LookupTableField'
        primaryKeys:
          description: The primary key field names.
          type: array
          minItems: 1
          uniqueItems: true
          items:
            type: string
          example:
            - FieldName1
            - FieldName2
        ttl:
          description: >-
            A time to live for each entry in the lookup table (in minutes).365 days is the maximum time to live
             for each entry that you can specify. This is field is not set if table has no ttl.
          type: integer
          format: int32
          example: 100
          maximum: 525600
          minimum: 0

        sizeLimitAction:
          description: >-
            The action that needs to be taken when the size limit is reached for the table.
            The possible values can be `StopIncomingMessages` or `DeleteOldData`.
            DeleteOldData will starting deleting old data once size limit is reached whereas StopIncomingMessages will
            discard all the updates made to the lookup table once size limit is reached.
          type: string
          default: StopIncomingMessages
          example: DeleteOldData

    LookupTableField:
      description: The definition of the field.
      type: object
      required:
        - fieldName
        - fieldType
      properties:
        fieldName:
          description: The name of the field.
          type: string
          example: sampleFieldName
        fieldType:
          description: >-
            The data type of the field. Supported types:
              - `boolean`
              - `int`
              - `long`
              - `double`
              - `string`
          type: string
          example: boolean

    LookupRequestToken:
      description: Allows you to track the status of an upload or export request.
      type: object
      required:
        - id
      properties:
        id:
          description: The identifier used to track the request.
          type: string
          example: 0000000001C41EF2

    RowUpdateDefinition:
      description: Lookup table data to be uploaded.
      type: object
      required:
        - row
      properties:
        row:
          description: >-
            A list of all the field identifiers and their corresponding values.
          type: array
          items:
            $ref: '#/components/schemas/TableRow'
          maxItems: 1000

    TableRow:
      description: Lookup table row column and column value.
      type: object
      required:
        - columnName
        - columnValue
      properties:
        columnName:
          description: Name of the column of the table.
          type: string
          example: user_id
        columnValue:
          description: Value of the specified column.
          type: string
          example: user1

    LookupUpdateDefinition:
      description: The updated lookup table parameters.
      type: object
      required:
        - ttl
        - description
      properties:
        ttl:
          description: >-
            A time to live for each entry in the lookup table (in minutes). 0 is a special value.
            A TTL of 0 implies entry will never be deleted from the table.
          type: integer
          format: int32
          example: 100
          maximum: 525600
          minimum: 0
        description:
          description: The description of the lookup table. The description cannot be blank.
          type: string
          example: This is a sample lookup table description.
        sizeLimitAction:
          description: >-
            The action that needs to be taken when the size limit is reached for the table.
            The possible values can be `StopIncomingMessages` or `DeleteOldData`.
            DeleteOldData will starting deleting old data once size limit is reached whereas StopIncomingMessages will
            discard all the updates made to the lookup table once size limit is reached.
          type: string
          default: StopIncomingMessages
          example: DeleteOldData

    LookupPreviewData:
      description: The preview data of the lookup table.
      type: object
      properties:
        fieldProperties:
          description: >-
            The field properties of the lookup table. This includes the field name, field description, and an identifier associated with
            each field.
          type: array
          items:
            $ref: '#/components/schemas/PreviewLookupTableField'
        fieldValueMapList:
          description: The data of the lookup table as a list of field identifiers mapped to their values.
          type: array
          items:
            description: A map of all the field identifiers and their corresponding values.
            type: object
            additionalProperties:
              type: string

    PreviewLookupTableField:
      description: The properties of the field.
      type: object
      required:
        - fieldName
        - fieldType
        - fieldId
      properties:
        fieldName:
          description: The name of the field.
          type: string
          example: sampleFieldName
        fieldType:
          description: >-
            The data type of the field. Supported types:
              - `boolean`
              - `int`
              - `long`
              - `double`
              - `string`
          type: string
          example: boolean
        fieldId:
          description: Identifier associated with each field of the table.
          type: string
          example: 1

    LookupAsyncJobStatus:
      description: Lookup table async job status.
      type: object
      required:
        - status
        - lookupContentId
        - lookupName
        - lookupContentPath
        - jobId
        - eventType
        - userId
        - createdAt
        - modifiedAt
      properties:
        jobId:
          description: An identifier returned in response to an asynchronous request.
          type: string
          example: 0000000001C41EF2
        status:
          description: >-
            Whether or not the request is pending (`Pending`), in progress (`InProgress`), has completed successfully (`Success`),
            has completed partially with warnings (`PartialSuccess`) or has
            completed with an error (`Failed`).
          type: string
        statusMessages:
          description: >-
            Additional status messages generated if any if the status is `Success`.
          type: array
          items:
            type: string
        errors:
          description: More information about the failures, if the status is `Failed`.
          type: array
          items:
            $ref: './generic-responses.yml#/components/schemas/ErrorDescription'
        warnings:
          description: More information about the warnings, if the status is `PartialSuccess`.
          type: array
          items:
            $ref: '#/components/schemas/warningDescription'
        lookupContentId:
          description: Content id of lookup table on which this operation was performed.
          type: string
          example: 0000000001C41EE4
        lookupName:
          description: Name of lookup table on which this operation was performed.
          type: string
          example: sampleLookup
        lookupContentPath:
          description: Content path of lookup table on which this operation was performed.
          type: string
          example: /Library/Users/xyz@demo.com/sampleLookup
        requestType:
          description: >-
            Type of asynchronous request made:
              - `BulkMerge`
              - `BulkReplace`
              - `Truncate`
          type: string
          example: BulkMerge
        userId:
          description: User id of user who initiated this operation.
          type: string
          example: 0000000006743FDD
        createdAt:
          description: Creation time of this job in UTC.
          type: string
          format: date-time
          example: 2018-10-16T09:10:00Z
        modifiedAt:
          description: Timestamp in UTC when status was last updated.
          type: string
          format: date-time
          example: 2018-10-16T09:10:00Z

    warningDescription:
      description: Warning description
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Description of the warning.
          example: '60 rows were dropped.'
        cause:
          type: string
          description: An optional cause of this warning.
          example: 'Primary key values were duplicate.'



