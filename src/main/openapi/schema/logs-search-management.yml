paths:
  logSearches:
    post:
      summary: Create a log search.
      description: Create a log search in the content library.
      operationId: createLogSearch
      tags:
        - logSearchesManagement
      parameters: []
      requestBody:
        description: The definition of the log search.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogSearchDefinition'
      responses:
        200:
          description: Newly created log search.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogSearch'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

  logSearchesId:
    get:
      summary: Get a log search.
      description: Get a log search from the content library by identifier.
      operationId: getLogSearch
      tags:
        - logSearchesManagement
      parameters:
      - name: id
        description: Identifier of the log search.
        required: true
        in: path
        schema:
          type: string
      responses:
        200:
          description: Log search that was requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogSearch'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

    put:
      summary: Update a log Search.
      description: >-
        Update a log search with the specified identifier. Partial update is not supported, you must provide values
        for all fields.
      operationId: updateLogSearch
      tags:
        - logSearchesManagement
      parameters:
      - name: id
        description: Identifier of the log search.
        required: true
        in: path
        schema:
          type: string
      requestBody:
        description: An updated log search definition.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogSearchDefinition'
      responses:
        200:
          description: The saved log search that was updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogSearch'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

    delete:
      summary: Delete a log search.
      description: >-
        Delete a log search from the content library.
      tags:
        - logSearchesManagement
      operationId: deleteLogSearch
      parameters:
      - name: id
        description: Identifier of the log search.
        required: true
        in: path
        schema:
          type: string
    responses:
      default:
        description: The operation failed with an error.
        content:
          application/json:
            schema:
              $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
      204:
        description: The log search was successfully deleted.

components:
  schemas:
    LogSearchBase:
      description: Definition of a log search.
      type: object
      required:
        - name
        - timeRange
        - queryString
#        - queryParameters
#        - schedules
      properties:
        name:
          description: Name of the item in the content library.
          type: string
          minLength: 1
          maxLength: 255
          pattern: '^[a-zA-Z0-9 +%-@.,_()]+$'
          example: "Short title"
        description:
          description: Item description in the content library.
          type: string
          maxLength: 255
          example: "Long and detailed description"
        timeRange:
          $ref: './generic-models.yml#/components/schemas/ResolvableTimeRange'
        queryString:
          description: Query to perform.
          type: string
          example: 'error | count by _sourceCategory'
        runByReceiptTime:
          description: >-
            This has the value `true` if the search is to be run by receipt time and
            `false` if it is to be run by message time.
          type: boolean
          example: false
          default: false
        parsingMode:
          description: >-
            Define the parsing mode to scan the JSON format log messages. Possible values are:
              1. `AutoParse`
              2. `Manual`
            In AutoParse mode, the system automatically figures out fields to parse based on the search query.
            While in the Manual mode, no fields are parsed out automatically.
            For more information see [Dynamic Parsing](https://help.sumologic.com/?cid=0011).
          type: string
          example: "AutoParse"
          default: "Manual"
#        queryParameters:
#          description: Definition of the query parameters.
#          type: array
#          items:
#            $ref: './content-synchronization-models.yml#/components/schemas/QueryParameterSyncDefinition'
#        schedules:
#          $ref: './content-synchronization-models.yml#/components/schemas/SearchScheduleSyncDefinition'
        properties:
          description: >
            Aggregate Results Settings and View configurations, Legends settings,
            and different visualisation settings overrides. Leave this field empty to use the defaults.

            This property contains JSON object encoded as a string.
          type: string
          example: "{ \"key\": \"value\" }"
    LogSearch:
      allOf:
        - $ref: '#/components/schemas/LogSearchBase'
        - $ref: './generic-models.yml#/components/schemas/MetadataModel'
        - type: object
          required:
            - id
          properties:
            id:
              type: string
              description: Identifier of the log search.
              example: 000000000000001A
            parentId:
              type: string
              description: Identifier of the parent element in the content library, such as folder.
              example: 0000000000007D2B
    LogSearchDefinition:
      description: The definition of the log search to save in the content library.
      type: object
      allOf:
        - $ref: '#/components/schemas/LogSearchBase'
        - type: object
          required:
            - parentId
          properties:
            parentId:
              type: string
              description: Identifier of a folder where to create the log search.
              example: 000000000000001A
