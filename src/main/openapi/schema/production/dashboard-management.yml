paths:
  # /dashboard endpoint
  dashboard:
    post:
      summary: Create a new dashboard.
      description: Creates a new dashboard.
      operationId: createDashboard
      tags:
        - dashboardManagement
      requestBody:
        description: Information to create the new dashboard.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dashboard'
      responses:
        200:
          description: The dashboard has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
  # /dashboard/{accessKey} endpoint
  dashboardAccessKey:
    get:
      summary: Get a dashboard by access key.
      description: Get a dashboard by access key.
      operationId: getDashboard
      tags:
        - dashboardManagement
      parameters:
        - name: accessKey
          description: Access key of dashboard to return.
          required: true
          in: path
          schema:
            type: string
      responses:
        200:
          description: Dashboard object that was requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
    put:
      summary: Update a dashboard by access key.
      description: Update a dashboard by access key.
      operationId: updateDashboard
      tags:
        - dashboardManagement
      parameters:
        - name: accessKey
          description: Access key of dashboard to update.
          required: true
          in: path
          schema:
            type: string
      requestBody:
        description: Information to update on the dashboard.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dashboard'
      responses:
        200:
          description: The dashboard was successfully modified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
    delete:
      summary: Delete a dashboard.
      description: Delete a dashboard by access key.
      operationId: deleteDashboard
      tags:
        - dashboardManagement
      parameters:
        - name: accessKey
          description: Access key of dashboard to delete.
          required: true
          in: path
          schema:
            type: string
      responses:
        204:
          description: Dashboard was deleted successfully.
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
  # /dashboard/contentId/{accessKey}
  contentId:
    get:
      summary: Get content ID by access key.
      description: Get content ID by access key.
      operationId: getContentId
      tags:
        - dashboardManagement
      parameters:
        - name: accessKey
          description: Access key of dashboard.
          required: true
          in: path
          schema:
            type: string
      responses:
        200:
          description: Content ID to be returned.
          content:
            application/json:
              schema:
                type: integer
                format: int64
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
  # /dashboard/panel/fill endpoint
  repeatingPanel:
    post:
      summary: Fills a repeating panel with repeated panels.
      description: Fills a repeating panel with repeated panels.
      operationId: fillRepeatingPanel
      tags:
        - dashboardManagement
      requestBody:
        description: Repeating panel to fill and chosen variables values.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepeatingPanelAndVariablesAndVariablesValues'
      responses:
        200:
          description: The repeatingPanel has been filled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepeatingPanel'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
  validateSumoSearchPanel:
    post:
      summary: Validates queries for a Sumo Search Panel.
      description: Validates queries for a Sumo Search Panel.
      operationId: validatePanel
      tags:
        - dashboardManagement
      requestBody:
        description: The Sumo search panel that is to be validated.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SumoSearchPanel'
      responses:
        200:
          description: The Sumo search panel is valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PanelValidationResult'
        default:
          description: The validation operation failed.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
  # /dashboard/{dashboardId}/generateReport endpoint
  generateReport:
    post:
      summary: Generate a report of a dashboard.
      description: Generate a report of a dashboard.
      operationId: generateDashboardReport
      tags:
        - dashboardManagement
      requestBody:
        description: Request for a report.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateDashboardReportRequest"
      parameters:
        - name: dashboardId
          description: Identifier of the dashboard to generate the report for.
          required: true
          in: path
          schema:
            type: string
      responses:
        200:
          description: Report generation request accepted.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneratedReportId"
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
components:
  schemas:
    Dashboard:
      type: object
      required:
        - title
        - rootPanel
        - timeRange
      properties:
        accessKey:
          description: Unique identifier for the dashboard.
          type: string
        title:
          description: Title of the dashboard.
          type: string
        version:
          description: Version of dashboard.
          type: number
        description:
          description: Description of the dashboard.
          type: string
        rootPanel:
          description: Base Container panel of the dashboard.
          $ref: '#/components/schemas/ContainerPanel'
        folderId:
          description: Optional folderId of the folder the dashboard should be saved in.
          type: string
        theme:
          description: Theme for the dashboard, can be light or dark.
          type: string
          # NOTE(hanlin, 2019-05-07): examples object is no longer supported in Schema object. See
          # https://github.com/OAI/OpenAPI-Specification/issues/1494
          example: light
        topologyLabelMap:
          description: Map of topology labels associated with the dashboard.
          $ref: './topology-label-management.yml#/components/schemas/TopologyLabelMap'
        refreshInterval:
          description: >
            Interval of time (in seconds) to automatically refresh the dashboard. A value of 0 means we never
            automatically refresh the dashboard.
          type: number
          format: int32
          example:
            - 5
        timeRange:
          description: Timerange of the dashboard. All panels by default will have this timerange.
          $ref: './generic-models.yml#/components/schemas/ResolvableTimeRange'
    Panel:
      type: object
      required:
        - key
        - panelType
      properties:
        id:
          description: Unique identifier for the panel.
          type: string
        key:
          description: Key for the panel.
          type: string
        title:
          description: Title of the panel.
          type: string
        visualSettings:
          description: Visual settings of the panel.
          type: string
        keepVisualSettingsConsistentWithParent:
          description: Keeps the visual settings (e.g., series colors) consistent with the parent panel's settings.
          type: boolean
          default: true
        panelType:
          description: Type of the panel.
          type: string
          example: 'ContainerPanel'
      discriminator:
        propertyName: panelType
    ContainerPanel:
      allOf:
        - $ref: '#/components/schemas/Panel'
        - type: object
          required:
            - layout
            - panels
          properties:
            layout:
              description: Layout of the panel.
              $ref: '#/components/schemas/Layout'
            panels:
              description: Children panels that the container panel contains.
              type: array
              items:
                $ref: '#/components/schemas/Panel'
            variables:
              description: Variables that could be applied to the panel's children.
              type: array
              items:
                $ref: './dashboard-variables-values.yml#/components/schemas/Variable'
            coloringRules:
              description: Coloring rules to color the panel/data with.
              type: array
              items:
                $ref: '#/components/schemas/ColoringRule'
    RepeatingPanel:
      allOf:
        # NOTE(hanlin, 2019-05-08): multi level inheritance does not seem to work for openapi 3.0
        # We expected: RepeatingPanel -> ContainerPanel -> Panel
        # OpenAPI generated model: RepeatingPanel ->Panel, ContainerPanel -> Panel
        - $ref: '#/components/schemas/ContainerPanel'
        - $ref: '#/components/schemas/Panel'
        - type: object
          required:
            - basePanel
            - repeatedVariables
            - minWidth
            - maxPanelsInRow
          properties:
            basePanel:
              description: Base panel format that will be repeated on.
              $ref: '#/components/schemas/SumoSearchPanel'
            repeatedVariables:
              description: The variable names of variables that will be repeated on.
              type: array
              items:
                type: string
            minWidth:
              description: The minimum size of the width of a repeated panel.
              type: number
              minimum: 1
              maximum: 24
            maxPanelsInRow:
              description: The maximum number of panels in a row in the repeating panel.
              type: number
              minimum: 1
              maximum: 24
    SumoSearchPanel:
      allOf:
        - $ref: '#/components/schemas/Panel'
        - type: object
          required:
            - title
            - queries
            - visualSettings
          properties:
            queries:
              description: Metrics queries of the panel.
              type: array
              items:
                $ref: '#/components/schemas/Query'
              maxItems: 6
            description:
              description: Description of the panel.
              type: string
            timeRange:
              description: Timerange of the panel
              type: string
            timerange:
              description: Timerange of the panel
              type: string
            coloringRules:
              description: Coloring rules to color the panel/data with.
              type: array
              items:
                $ref: '#/components/schemas/ColoringRule'
            linkedDashboards:
              description: List of linked dashboards.
              type: array
              items:
                $ref: '#/components/schemas/LinkedDashboard'
    TextPanel:
      allOf:
        - $ref: '#/components/schemas/Panel'
        - type: object
          required:
            - title
          properties:
            text:
              description: Text to be displayed in the panel.
              type: string
    VariableValuesData:
      type: object
      description: Variable values and last run time for the variable.
      properties:
        variableValues:
          type: array
          description: Values for the variable.
          example: "myCluster"
          items:
            type: string
        lastRunTime:
          type: string
          format: date-time
          description: >
            The last time we fetched values for the variable. If value is `null`, it means we did not fetch values yet.
          example: "2018-11-01T09:10:00Z"

    VariablesValuesData:
      type: object
      required:
        - data
      properties:
        data:
          description: TBD
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          default: {}
        richData:
          type: object
          description: Data for variable values and last run time.
          additionalProperties:
            $ref: '#/components/schemas/VariableValuesData'
          default: {}
    VariableValueDatum:
      type: object
      required:
        - datum
      properties:
        datum:
          description: A particular value within a variable
          type: string
    Query:
      type: object
      required:
        - queryString
        - queryType
        - queryKey
      properties:
        queryString:
          description: The metrics or logs query.
          type: string
        queryType:
          description: The type of the query (metrics/logs).
          type: string
        queryKey:
          description: The key for metrics/logs queries.
          type: string
        metricsQueryMode:
          description: >
            The mode of the metrics query that the user was editing. Can be `Basic` or `Advanced`.
            Will ONLY be specified for metrics queries.
          type: string
        metricsQueryData:
          description: The data for a basic metrics query. Will ONLY be specified for metrics queries.
          $ref: '#/components/schemas/MetricsQueryData'
    Layout:
      type: object
      required:
        - layoutType
        - layoutStructures
      properties:
        layoutType:
          description: Type of layout of panels on Dashboard. Example layouts Grid, Tabs, Hierarchical etc. Currently supports `Grid` only
          type: string
        layoutStructures:
          description: Layout structures for the panel's childen.
          type: array
          items:
            $ref: '#/components/schemas/LayoutStructure'
      discriminator:
        propertyName: layoutType
    Grid:
      allOf:
        - $ref: '#/components/schemas/Layout'
        - type: object
    LayoutStructure:
      type: object
      required:
        - key
        - structure
      properties:
        key:
          description: The id of the panel that this structure applies to.
          type: string
        structure:
          description: The structure of a panel.
          type: string
    RepeatingPanelAndVariablesAndVariablesValues:
      type: object
      required:
        - repeatingPanel
        - variables
        - variablesValues
      properties:
        repeatingPanel:
          description: RepeatingPanel to fill.
          $ref: '#/components/schemas/RepeatingPanel'
        variables:
          description: List of variables.
          type: array
          items:
            $ref: './dashboard-variables-values.yml#/components/schemas/Variable'
        variablesValues:
          description: Chosen variables to fill the repeatingPanel by.
          $ref: '#/components/schemas/VariablesValuesData'
    ColoringRule:
      type: object
      required:
        - scope
        - singleSeriesAggregateFunction
        - multipleSeriesAggregateFunction
        - coloringThresholds
      properties:
        scope:
          description: Regex string to match queries to apply coloring to.
          type: string
        singleSeriesAggregateFunction:
          description: Function to aggregate one series into one single value.
          type: string
        multipleSeriesAggregateFunction:
          description: Function to aggregate the aggregate values of multiple time series into one single value.
          type: string
        colorThresholds:
          description: Thresholds and colors to color with.
          type: array
          items:
            $ref: '#/components/schemas/ColoringThreshold'
    ColoringThreshold:
      type: object
      required:
        - color
      properties:
        color:
          description: Color for the threshold.
          type: string
        min:
          description: Absolute inclusive threshold to color by.
          type: number
          format: double
        max:
          description: Absolute exclusive threshold to color by.
          type: number
          format: double
    LinkedDashboard:
      type: object
      required:
        - accessKey
      properties:
        accessKey:
          description: Access key of the linked dashboard.
          type: string
          example: "B23OjNs5ZCyn5VdMwOBoLo3PjgRnJSAlNTKEDAcpuDG2CIgRe9KFXMofm2H2"
        title:
          description: Title of the linked dashboard.
          type: string
        includeTimeRange:
          description: Include time range from the current dashboard to the linked dashboard.
          type: boolean
          default: false
        includeVariables:
          description: Include variables from the current dashboard to the linked dashboard.
          type: boolean
          default: false
    PanelValidationResult:
      type: object
      required:
        - status
      properties:
        status:
          description: The boolean status of validation check.
          type: boolean
        errors:
          description: List of error strings about validation failures.
          type: array
          items:
            type: string
    MetricsQueryData:
      type: object
      description: The data format describing a basic metrics query.
      required:
        - metric
        - filters
      example:
        metric: CPU_user
        aggregationType: count
        groupBy: _sourceHost
        filters:
          - key: _sourceCategory
            value: cqmerger
          - key: _sourceHost
            value: nite-cqmerger-1
        operators:
          operatorName: avg
          parameters:
            - key: aggregator
              value: max
            - key: operation
              value: >
            - key: value
              value: 50
      properties:
        metric:
          description: The metric of the query.
          type: string
        aggregationType:
          description: The type of aggregation. Can be `Count`, `Minimum`, `Maximum`, `Sum` or `Average`.
          type: string
        groupBy:
          description: The field to group the results by.
          type: string
        filters:
          description: A list of filters for the metrics query.
          type: array
          items:
            $ref: '#/components/schemas/MetricsFilter'
        operators:
          description: A list of operator data for the metrics query.
          type: array
          items:
            $ref: '#/components/schemas/OperatorData'
    MetricsFilter:
      type: object
      description: The filter for metrics query.
      required:
        - value
      example:
        key: _sourceCategory
        value: cqmerger
        negation: false
      properties:
        key:
          description: The key of the metrics filter.
          type: string
        value:
          description: The value of the metrics filter.
          type: string
        negation:
          description: Whether or not the metrics filter is negated.
          type: boolean
    OperatorData:
      type: object
      description: The operator data for metrics query.
      required:
        - operatorName
        - parameters
      example:
        operatorName: avg
        parameters:
          - key: aggregator
            value: max
          - key: operation
            value: >
          - key: value
            value: 50
      properties:
        operatorName:
          description: The name of the metrics operator.
          type: string
        parameters:
          description: A list of operator parameters for the operator data.
          type: array
          items:
            $ref: '#/components/schemas/OperatorParameter'
    OperatorParameter:
      type: object
      description: The operator parameter for operator data.
      required:
        - key
        - value
      example:
        key: aggregator
        value: max
      properties:
        key:
          description: The key of the operator parameter.
          type: string
        value:
          description: The value of the operator parameter.
          type: string
    GeneratedReportId:
      type: string
      description: Id of report generation request, identifying a report generation task.
      example: "0000000000001"
    GenerateReportRequest:
      type: object
      required:
        - action
        - exportFormat
        - timezone
      properties:
        action:
          description: Action to perform with report. Can be `Email`.
          type: string
          example: "Email"
        exportFormat:
          description: File format of the report. Can be `Pdf` or `Png`.
          type: string
          example: "Pdf"
        timezone:
          description: Time zone for the query time ranges. Follow the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)
          type: string
          example: "America/Los_Angeles"
    GenerateDashboardReportRequest:
      allOf:
        - $ref: "#/components/schemas/GenerateReportRequest"
        - type: object
          required:
            - data
          properties:
            data:
              description: Request data to generate a dashboard report.
              $ref: "#/components/schemas/GenerateDashboardData"
    GenerateDashboardData:
      type: object
      required:
        - variableValues
      properties:
        variableValues:
          description: Populated Dashboard variables.
          $ref: '#/components/schemas/VariablesValuesData'
