paths:
  # /dynamicParsingRules endpoint

  dynamicParsingRules:
    get:
      summary: Get a list of dynamic parsing rules.
      description: >-
        Get a list of all dynamic parsing rules. The response is paginated with a default limit of 100 dynamic parsing
        rules per page.
      operationId: listDynamicParsingRules
      tags:
        - dynamicParsingRuleManagement
      parameters:
        - name: limit
          description: >-
            Limit the number of dynamic parsing rules returned in the response. The number of dynamic parsing rules returned
            may be less than the `limit`.
          required: false
          in: query
          schema:
            default: 100
            minimum: 1
            type: integer
            maximum: 1000
            format: int32
            example: 10
        - name: token
          description: >-
            Continuation token to get the next page of results. A page object with the next continuation token is returned
            in the response body. Subsequent GET requests should specify the continuation token to get the next page of
            results.
          required: false
          in: query
          schema:
            type: string
            example: 0000000001C51FF7
      responses:
        200:
          description: A paginated list of dynamic parsing rules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDynamicRulesResponse'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
    post:
      summary: Create a new dynamic parsing rule.
      description: Create a new dynamic parsing rule.
      operationId: createDynamicParsingRule
      tags:
        - dynamicParsingRuleManagement
      requestBody:
        description: Information about the new dynamic parsing rule.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DynamicRuleDefinition'
      responses:
        200:
          description: The dynamic parsing rule has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicRule'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

  dynamicParsingRuleId:
    get:
      summary: Get a dynamic parsing rule.
      description: Get a dynamic parsing rule with the given identifier.
      operationId: getDynamicParsingRule
      tags:
        - dynamicParsingRuleManagement
      parameters:
        - name: id
          description: Identifier of dynamic parsing rule to return.
          required: true
          in: path
          schema:
            type: string
            example: 0000000001C41EE4
      responses:
        200:
          description: Dynamic parsing rule object that was requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicRule'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
    put:
      summary: Update a dynamic parsing rule.
      description: >-
        Update an existing dynamic parsing rule. All properties specified in the request are replaced. Missing properties
        are set to their default values.
      operationId: updateDynamicParsingRule
      tags:
        - dynamicParsingRuleManagement
      parameters:
        - name: id
          description: Identifier of the dynamic parsing rule to update.
          required: true
          in: path
          schema:
            type: string
            example: 0000000001C41EE4
      requestBody:
        description: Information to update about the dynamic parsing rule.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DynamicRuleDefinition'
      responses:
        200:
          description: The dynamic parsing rule was successfully modified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicRule'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
    delete:
      summary: Delete a dynamic parsing rule.
      description: Delete a dynamic parsing rule with the given identifier.
      operationId: deleteDynamicParsingRule
      tags:
        - dynamicParsingRuleManagement
      parameters:
        - name: id
          description: Identifier of the dynamic parsing rule to delete.
          required: true
          in: path
          schema:
            type: string
            example: 0000000001C41EE4
      responses:
        204:
          description: Dynamic parsing rule was deleted successfully.
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

components:
  schemas:
    DynamicRuleDefinition:
      type: object
      required:
        - name
        - scope
        - enabled
      properties:
        name:
          description: Name of the dynamic parsing rule. Use a name that makes it easy to identify the rule.
          type: string
          example: 'DynamicParsingRule123'
          minLength: 1
          maxLength: 256
        scope:
          description: >-
            Scope of the dynamic parsing rule. This could be a sourceCategory, sourceHost, or any other metadata that
            describes the data you want to extract from. Think of the Scope as the first portion of an ad hoc search,
            before the first pipe ( | ). You'll use the Scope to run a search against the rule.
          type: string
          example: '_sourceHost=127.0.0.1'
          minLength: 0
          maxLength: 2048
        enabled:
          description: Is the dynamic parsing rule enabled.
          type: boolean
          default: true
          example: false
    DynamicRule:
      type: object
      allOf:
        - $ref: '#/components/schemas/DynamicRuleDefinition'
        - $ref: './generic-models.yml#/components/schemas/Metadata'
        - required:
            - id
          properties:
            id:
              description: Unique identifier for the dynamic parsing rule.
              type: string
              example: 0000000001C41EE4
    ListDynamicRulesResponse:
      type: object
      required:
        - data
      properties:
        data:
          description: List of dynamic parsing rules.
          type: array
          items:
            $ref: '#/components/schemas/DynamicRule'
        next:
          description: Next continuation token.
          type: string
          example: 0000000001C51FF7
