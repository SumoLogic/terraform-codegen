paths:
  # /extractionRules endpoint
  extractionRules:
    get:
      summary: Get a list of field extraction rules.
      description: >-
        Get a list of all field extraction rules. The response is paginated with a default limit of 100 field extraction
        rules per page.
      operationId: listExtractionRules
      tags:
      - extractionRuleManagement
      parameters:
      - name: limit
        description: >-
          Limit the number of field extraction rules returned in the response. The number of field extraction rules returned
          may be less than the `limit`.
        required: false
        in: query
        schema:
          type: integer
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
      - name: token
        description: >-
          Continuation token to get the next page of results. A page object with the next continuation token is returned
          in the response body. Subsequent GET requests should specify the continuation token to get the next page of
          results.
        required: false
        in: query
        schema:
          type: string
      responses:
        200:
          description: A paginated list of field extraction rules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExtractionRulesResponse'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
    post:
      summary: Create a new field extraction rule.
      description: Create a new field extraction rule.
      operationId: createExtractionRule
      tags:
      - extractionRuleManagement
      parameters: []
      requestBody:
        description: Information about the new field extraction rule.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtractionRuleDefinition'
      responses:
        200:
          description: The field extraction rule has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtractionRule'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

  # /extractionRules/{id} endpoint
  extractionRuleId:
    get:
      summary: Get a field extraction rule.
      description: Get a field extraction rule with the given identifier.
      operationId: getExtractionRule
      tags:
      - extractionRuleManagement
      parameters:
      - name: id
        description: Identifier of field extraction rule to return.
        required: true
        in: path
        schema:
          type: string
      responses:
        200:
          description: Extraction rule object that was requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtractionRule'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
    put:
      summary: Update a field extraction rule.
      description: >-
        Update an existing field extraction rule. All properties specified in the request are replaced. Missing properties
        are set to their default values.
      operationId: updateExtractionRule
      tags:
      - extractionRuleManagement
      parameters:
      - name: id
        description: Identifier of the field extraction rule to update.
        required: true
        in: path
        schema:
          type: string
      requestBody:
        description: Information to update about the field extraction rule.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtractionRuleDefinition'
      responses:
        200:
          description: The field extraction rule was successfully modified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtractionRule'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
    delete:
      summary: Delete a field extraction rule.
      description: Delete a field extraction rule with the given identifier.
      operationId: deleteExtractionRule
      tags:
      - extractionRuleManagement
      parameters:
      - name: id
        description: Identifier of the field extraction rule to delete.
        required: true
        in: path
        schema:
          type: string
      responses:
        204:
          description: Extraction rule was deleted successfully.
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

components:
  schemas:
    ExtractionRuleDefinition:
      type: object
      required:
      - name
      - scope
      - parseExpression
      - enabled
      properties:
        name:
          description: Name of the field extraction rule. Use a name that makes it easy to identify the rule.
          type: string
          example: 'ExtractionRule123'
          minLength: 1
          maxLength: 256
        scope:
          description: >-
            Scope of the field extraction rule. This could be a sourceCategory, sourceHost, or any other metadata that
            describes the data you want to extract from. Think of the Scope as the first portion of an ad hoc search,
            before the first pipe ( | ). You'll use the Scope to run a search against the rule.
          type: string
          example: '_sourceHost=127.0.0.1'
          minLength: 0
          maxLength: 2048
        parseExpression:
          description: >-
            Describes the fields to be parsed.
          type: string
          example: 'parse "message count = *," as msg_count'
          maxLength: 16384
        enabled:
          description: Is the field extraction rule enabled.
          type: boolean
          default: true
          example: true
    ExtractionRule:
      type: object
      allOf:
      - $ref: '#/components/schemas/ExtractionRuleDefinition'
      - $ref: './generic-models.yml#/components/schemas/MetadataModel'
      - required:
        - id
        properties:
          id:
            description: Unique identifier for the field extraction rule.
            type: string
          fieldNames:
            description: List of extracted fields from "parseExpression".
            type: array
            items:
              type: string
    ListExtractionRulesResponse:
      type: object
      required:
      - data
      properties:
        data:
          description: List of field extraction rules.
          type: array
          items:
            $ref: '#/components/schemas/ExtractionRule'
        next:
          description: Next continuation token.
          type: string
