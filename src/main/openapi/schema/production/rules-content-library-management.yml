paths:
  rules:
    root:
      get:
        summary: Get the root cloud SIEM rules folder.
        description: >-
          Get the root folder in the cloud SIEM rules library.
        operationId: getRulesLibraryRoot
        tags:
        - rulesLibraryManagement
        responses:
          200:
            description: Root folder of the cloud SIEM rules library.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RulesLibraryFolderResponse'
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

    post:
      summary: >
        Create a cloud SIEM folder or rule.
      description: >-
        Create a folder or rule in the cloud SIEM rules library.
      operationId: rulesCreate
      tags:
      - rulesLibraryManagement
      parameters:
      - name: parentId
        description: Identifier of the parent folder in which to create the cloud SIEM folder or rule.
        required: true
        in: query
        schema:
          type: string
      requestBody:
        description: The cloud SIEM folder or rule to create.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RulesLibraryBase'
      responses:
        200:
          description: The folder or rule was created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RulesLibraryBaseResponse'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

    get:
      summary: Bulk read cloud SIEM folders and rules.
      description: >-
        Bulk read folders and rules by the given identifiers from the cloud SIEM rules library.
      operationId: rulesReadByIds
      tags:
      - rulesLibraryManagement
      parameters:
      - name: ids
        description: A comma-separated list of identifiers.
        required: true
        in: query
        schema:
          type: array
          items:
            type: string
        example: 0000000000000001,0000000000000002,0000000000000003
      responses:
        200:
          description: A map between an identifier and its definition (folder or rule).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdToRulesLibraryBaseResponseMap'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

    delete:
      summary: >
        Bulk delete cloud SIEM folders and rules.
      description: >-
        Bulk delete folders and rules by the given identifiers in the cloud SIEM rules library.
      operationId: rulesDeleteByIds
      tags:
      - rulesLibraryManagement
      parameters:
      - name: ids
        description: A comma-separated list of identifiers.
        required: true
        in: query
        schema:
          type: array
          items:
            type: string
        example: 0000000000000001,0000000000000002,0000000000000003
      responses:
        200:
          description: A map between the deleted identifier and its metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdToRulesLibraryBaseResponseMap'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

    path:
      get:
        summary: Read a folder or rule by its path.
        description: >-
          Read a folder or rule by its path in the rules library structure.
        operationId: rulesGetByPath
        tags:
          - rulesLibraryManagement
        parameters:
          - name: path
            description: The path of the folder or rule.
            required: true
            in: query
            schema:
              type: string
        responses:
          200:
            description: Requested folder or rule.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RulesLibraryBaseResponse'
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

    search:
      get:
        summary: Search for folders or rules.
        description: >-
          Search for a folder or rule in the cloud SIEM rules library structure.
        operationId: rulesSearch
        tags:
          - rulesLibraryManagement
        parameters:
          - name: query
            description: >-
              The search query to find folder or rule. Below is the list of different filters with examples:
                - **createdBy** : Filter by the user's identifier who created the content. Example: `createdBy:000000000000968B`.
                - **createdBefore** : Filter by the content objects created before the given timestamp(in milliseconds). Example: `createdBefore:1457997222`.
                - **createdAfter** : Filter by the content objects created after the given timestamp(in milliseconds). Example: `createdAfter:1457997111`.
                - **modifiedBefore** : Filter by the content objects modified before the given timestamp(in milliseconds). Example: `modifiedBefore:1457997222`.
                - **modifiedAfter** : Filter by the content objects modified after the given timestamp(in milliseconds). Example: `modifiedAfter:1457997111`.
                - **type** : Filter by the type of the content object. Example: `type:folder`.
                - **status** : Filter by the status of the rules. Status can either be `active` or `inactive`. Example: `status:active`.

              You can also use multiple filters in one query. For example to search for all content objects created by user with identifier 000000000000968B with creation timestamp after 1457997222 containing the text Test, the query would look like:

                `createdBy:000000000000968B createdAfter:1457997222 Test`
            required: true
            in: query
            schema:
              type: string
            example: "createdBy:000000000000968B Test"
          - name: limit
            description: Maximum number of items you want in the response.
            required: false
            in: query
            schema:
              default: 100
              type: integer
              format: int32
            example: 10
          - name: offset
            description: The position or row from where to start the search operation.
            required: false
            in: query
            schema:
              default: 0
              type: integer
              format: int32
            example: 5
        responses:
          200:
            description: List of folders and rules matching the search query.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ListRulesLibraryItemWithPath'
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

  ruleId:
    put:
      summary: >
        Update a cloud SIEM folder or rule.
      description: >-
        Update a folder or rule in the cloud SIEM rules library.
      operationId: rulesUpdateById
      tags:
      - rulesLibraryManagement
      parameters:
      - name: id
        description: Identifier of the cloud SIEM folder or rule to update.
        required: true
        in: path
        schema:
          type: string
      requestBody:
        description: >-
          The folder or rule to update. The content version must match its latest version number in the cloud SIEM rules
          library. If the version does not match it will not be updated.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RulesLibraryBaseUpdate'
      responses:
        200:
          description: The folder or rule was updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RulesLibraryBaseResponse'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

    get:
      summary: Get a cloud SIEM folder or rule.
      description: >-
        Get a folder or rule from the cloud SIEM rules library.
      operationId: rulesReadById
      tags:
      - rulesLibraryManagement
      parameters:
      - name: id
        description: Identifier of the cloud SIEM folder or rule to read.
        required: true
        in: path
        schema:
          type: string
      responses:
        200:
          description: Requested folder or rule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RulesLibraryBaseResponse'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

    delete:
      summary: >
        Delete a cloud SIEM folder or rule.
      description: >-
        Delete a folder or rule from the cloud SIEM rules library.
      operationId: rulesDeleteById
      tags:
      - rulesLibraryManagement
      parameters:
      - name: id
        description: Identifier of the cloud SIEM folder or rule to delete.
        required: true
        in: path
        schema:
          type: string
      responses:
        204:
          description: The folder or rule was successfully deleted.
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

    unlock:
      post:
        summary: Unlock a folder or rule.
        description: >-
          Unlocking requires the `LockRules` capability.
          It is only possible to unlock the highest locked object in a tree of locked objects.
          Unlocking recursively unlocks all of the objects children.
        operationId: rulesUnlockById
        tags:
          - rulesLibraryManagement
        produces:
          - application/json
        parameters:
          - name: id
            description: The id of the folder or rule that needs to be unlocked.
            required: true
            in: path
            schema:
              type: string
        responses:
          200:
            description: Updated folder or named action.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RulesLibraryBaseResponse'
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

    lock:
      post:
        summary: Lock a folder or rule.
        description: >-
          Locking requires the `LockRules` capability.
          When an object is locked, it can't be moved or deleted and only the local fields can be modified.
          Locking recursively locks all of the objects children.
        operationId: rulesLockById
        tags:
          - rulesLibraryManagement
        produces:
          - application/json
        parameters:
          - name: id
            description: The id of the folder or rule that needs to be locked.
            required: true
            in: path
            schema:
              type: string
        responses:
          200:
            description: Updated folder or named action.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RulesLibraryBaseResponse'
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

    path:
      get:
        summary: Get the path of a cloud SIEM folder or rule.
        description: >-
          Get the full path of folder or rule in the cloud SIEM rules library.
        operationId: getRulesFullPath
        tags:
        - rulesLibraryManagement
        parameters:
        - name: id
          description: Identifier of the cloud SIEM folder or rule.
          required: true
          in: path
          schema:
            type: string
        responses:
          200:
            description: Full path of the folder or rule.
            content:
              application/json:
                schema:
                  $ref: './content-library-models.yml#/components/schemas/Path'
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

    move:
      post:
        summary: Move a cloud SIEM folder or rule.
        description: >-
          Move a folder or rule to a different location in the cloud SIEM rules library.
        operationId: rulesMove
        tags:
        - rulesLibraryManagement
        parameters:
        - name: id
          description: Identifier of the folder or rule to move.
          required: true
          in: path
          schema:
            type: string
        - name: parentId
          description: Identifier of the parent folder to move the folder or rule to.
          required: true
          in: query
          schema:
            type: string
        responses:
          200:
            description: Moved folder or rule.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RulesLibraryBaseResponse'
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

    copy:
      post:
        summary: Copy a cloud SIEM folder or rule.
        description: >-
          Copy a folder or rule in the cloud SIEM rules library.
        operationId: rulesCopy
        tags:
        - rulesLibraryManagement
        parameters:
        - name: id
          description: Identifier of the cloud SIEM folder or rule to copy.
          required: true
          in: path
          schema:
            type: string
        requestBody:
          description: >-
            Fields include:
              1) Identifier of the parent folder to copy to.
              2) Optionally provide a new name.
              3) Optionally provide a new description.
              4) Optionally set to true if you want to copy and preserved the locked status. Requires `LockRules` capability.
          required: true
          content:
            application/json:
              schema:
                $ref: './content-library-models.yml#/components/schemas/ContentCopyParams'
        responses:
          200:
            description: The folder or rule was copied.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RulesLibraryBaseResponse'
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

    export:
      get:
        summary: Export a folder or rule.
        description: >-
          Export a folder or rule. If the given identifier is a folder, everything under the folder is exported recursively
          with folder as the root.
        operationId: rulesExportItem
        tags:
        - rulesLibraryManagement
        parameters:
        - name: id
          description: Identifier of the folder or rule to export.
          required: true
          in: path
          schema:
            type: string
        - name: preserveLock
          description: >
            Set this to true if you want to export an object and preserve the locked status.
          required: false
          in: query
          schema:
            type: boolean
          default: false
        responses:
          200:
            description: Exported folder or rule
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RulesLibraryExportBase'
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

    import:
      post:
        summary: Import a folder or rule.
        description: >-
          Import a folder or rule.
        operationId: rulesImportItem
        tags:
        - rulesLibraryManagement
        parameters:
        - name: parentId
          description: Identifier of the parent folder in which to import the folder or rule.
          required: true
          in: path
          schema:
            type: string
        requestBody:
          description: >-
            The folder or rule to be imported.
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RulesLibraryExportBase'
        responses:
          200:
            description: Newly imported folder or rule.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RulesLibraryBaseResponse'
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

components:
  schemas:
    RulesLibraryBase:
      type: object
      discriminator:
        propertyName: type
      required:
      - name
      - description
      - type
      properties:
        name:
          description: Name of the cloud SIEM folder or rule.
          type: string
          minLength: 1
          maxLength: 255
        description:
          description: Description of the cloud SIEM folder or rule.
          type: string
          maxLength: 4096
        type:
          description: >-
            Type of the object model. Valid values:
              1) RulesLibraryFolder
              2) RulesLibraryRule
          type: string
        isLocked:
          description: >-
            Locking/Unlocking requires the `LockRules` capability.
            Locked objects can only be `Localized`. Updating or moving requires unlocking the object.
            Locking/Unlocking recursively locks all of the objects children.
            All children of a locked object must be locked.
          type: boolean
          default: false

    RulesLibraryRule:
      allOf:
      - $ref: '#/components/schemas/RulesLibraryBase'
      - type: object
        required:
        - status
        - filters
        - ruleActions
        properties:
          status:
            description: The status of the cloud SIEM rule, either active or inactive.
            type: string
            example: "ACTIVE"
          filters:
            description: A list of expressions describing what the cloud SIEM rule filters.
            type: array
            items:
              $ref: '#/components/schemas/Filter'
            default: []
            minItems: 1
            maxItems: 10
          joinExpression:
            description: An expression describing what the cloud SIEM rule joins.
            type: string
          aggregation:
            type: object
            $ref: '#/components/schemas/Aggregation'
          ruleActions:
            description: A list of actions describing what the cloud SIEM rule does.
            type: object
            $ref: '#/components/schemas/RuleActions'

    RulesLibraryFolder:
      allOf:
      - $ref: '#/components/schemas/RulesLibraryBase'

    RulesLibraryBaseUpdate:
      type: object
      discriminator:
    # NOTE(vishal, 2019-04-01) Repeating RulesLibraryBase properties here. Our documentation tool
    # break with allOf and discriminator in same object.
        propertyName: type
      required:
      - name
      - description
      - version
      - type
      properties:
        name:
          description: The name of the folder or rule.
          type: string
          minLength: 1
          maxLength: 255
        description:
          description: The description of the folder or rule.
          type: string
          maxLength: 4096
        version:
          description: The version of the folder or rule.
          type: integer
          format: int64
        type:
          description: >-
            Type of the object model. Valid values:
              1) RulesLibraryFolderWithVersion
              2) RulesLibraryRuleWithVersion
          type: string

    RulesLibraryRuleUpdate:
      allOf:
      - $ref: '#/components/schemas/RulesLibraryBaseUpdate'
      - type: object
        required:
        - status
        - filters
        - ruleActions
        properties:
          status:
            description: The status of the cloud SIEM rule, either active or inactive.
            type: string
            example: "ACTIVE"
          filters:
            description: A list of expressions describing what the cloud SIEM rule filters.
            type: array
            items:
              $ref: '#/components/schemas/Filter'
            default: []
            minItems: 1
            maxItems: 10
          joinExpression:
            description: An expression describing what the cloud SIEM rule joins.
            type: string
          aggregation:
            type: object
            $ref: '#/components/schemas/Aggregation'
          ruleActions:
            description: A list of actions describing what the cloud SIEM rule does.
            type: object
            $ref: '#/components/schemas/RuleActions'
    RulesLibraryFolderUpdate:
      allOf:
      - $ref: '#/components/schemas/RulesLibraryBaseUpdate'

    RulesLibraryBaseResponse:
      type: object
      discriminator:
        propertyName: type
      required:
      - id
      - name
      - description
      - version
      # NOTE(vishal, 2019-04-01) Don't refer to MetadataModel. Don't know why but it
      # breaks documentation.
      - createdAt
      - createdBy
      - modifiedAt
      - modifiedBy
      - parentId
      - contentType
      - type
      - isLocked
      - isSystem
      - isMutable
      properties:
        id:
          description: Identifier of the folder or rule.
          type: string
        name:
          description: Name of the folder or rule.
          type: string
        description:
          description: Description of the folder or rule.
          type: string
        version:
          description: Version of the folder or rule.
          type: integer
          format: int64
        createdAt:
          description: >-
            Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format.
          type: string
          format: date-time
        createdBy:
          description: Identifier of the user who created the resource.
          type: string
        modifiedAt:
          description: Last modification timestamp in UTC.
          type: string
          format: date-time
        modifiedBy:
          description: Identifier of the user who last modified the resource.
          type: string
        parentId:
          description: Identifier of the parent folder.
          type: string
        contentType:
          description: >-
            Type of the content. Valid values:
              1) Folder
              2) Rule
          type: string
        type:
          description: Type of the object model.
          type: string
        isLocked:
          description: Whether the object is locked.
          type: boolean
        isSystem:
          description: >-
            System objects are objects provided by Sumo Logic.
            System objects can only be localized. Non-local fields can't be updated.
          type: boolean
        isMutable:
          description: >-
            Immutable objects are "READ-ONLY".
          type: boolean

    ListRulesLibraryItemWithPath:
      description: List of folders or rules.
      type: array
      items:
        $ref: '#/components/schemas/RulesLibraryItemWithPath'

    RulesLibraryItemWithPath:
      type: object
      required:
        - item
        - path
      properties:
        item:
          description: Folder or rule.
          type: object
          $ref: '#/components/schemas/RulesLibraryBaseResponse'
        path:
          description: Path of the folder or rule.
          type: string
          example: "/Rules/SampleFolder/TestRule"

    RulesLibraryRuleResponse:
      allOf:
      - $ref: '#/components/schemas/RulesLibraryBaseResponse'
      - type: object
        required:
        - warnings
        - rule
        properties:
          warnings:
            description: Warnings with optional locators.
            type: object
            $ref: '#/components/schemas/RuleWarnings'
          rule:
            description: A folder or rule response.
            type: object
            $ref: '#/components/schemas/RuleItem'

    RulesLibraryFolderResponse:
      allOf:
      - $ref: '#/components/schemas/RulesLibraryBaseResponse'
      - type: object
        required:
        - children
        properties:
          children:
            description: Children of the folder.
            type: array
            items:
              $ref: '#/components/schemas/RulesLibraryBaseResponse'

    IdToRulesLibraryBaseResponseMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/RulesLibraryBaseResponse'

    RulesLibraryExportBase:
      type: object
      discriminator:
        propertyName: type
      required:
      - name
      - description
      - type
      properties:
        name:
          description: Name of the folder or rule.
          type: string
          minLength: 1
          maxLength: 255
        description:
          description: Description of the folder or rule.
          type: string
          maxLength: 4096
        type:
          description: Type of the object model.
          type: string

    RulesLibraryRuleExport:
      allOf:
      - $ref: '#/components/schemas/RulesLibraryExportBase'
      - type: object
        required:
        - status
        - filters
        - ruleActions
        properties:
          status:
            description: The status of the cloud SIEM rule, either active or inactive.
            type: string
            example: "ACTIVE"
          filters:
            description: A list of expressions describing what the cloud SIEM rule filters.
            type: array
            items:
              $ref: '#/components/schemas/Filter'
            default: []
            minItems: 1
            maxItems: 10
          joinExpression:
            description: An expression describing what the cloud SIEM rule joins.
            type: string
          aggregation:
            type: object
            $ref: '#/components/schemas/Aggregation'
          ruleActions:
            description: A list of actions describing what the cloud SIEM rule does.
            type: object
            $ref: '#/components/schemas/RuleActions'

    RulesLibraryFolderExport:
      allOf:
      - $ref: '#/components/schemas/RulesLibraryExportBase'
      - type: object
        properties:
          children:
            description: The items in the folder, a list of rules and/or folder items.
            type: array
            items:
              $ref: '#/components/schemas/RulesLibraryExportBase'

    RuleItem:
      type: object
      required:
      - status
      - filters
      - ruleActions
      properties:
        status:
          description: The status of the cloud SIEM rule, either active or inactive.
          type: string
          example: "ACTIVE"
        filters:
          description: One or more filter expressions against which incoming log messages will be compared. Messages
            that match the filter are passed on to the next rule components.
          type: array
          items:
            $ref: '#/components/schemas/Filter'
          default: []
          minItems: 1
          maxItems: 10
        joinExpression:
          description: An expression, made up of one or more match expressions and the withinTime operator, that
            correlates filtered events or rule variables.
          type: string
        aggregation:
          description: Specifies the number of events that must have matching or mismatching values for a particular
            field to be passed on to the action component.
          type: object
          $ref: '#/components/schemas/Aggregation'
        ruleActions:
          description: One or more actions that will be triggered for events that match the rule criteria.
          type: object
          $ref: '#/components/schemas/RuleActions'

    RuleWarnings:
      type: object
      properties:
        warnings:
          description: A map of keys to any warnings.
          type: object
          additionalProperties:
            type: string
        warningLocators:
          description: An array of warnings with their description and locator.
          type: array
          items:
            $ref: '#/components/schemas/WarningLocator'

    WarningLocator:
      type: object
      required:
        - message
        - detail
        - locator
      properties:
        message:
          description: A summary of the warning.
          type: string
        detail:
          description: More information to explain the warning.
          type: string
        locator:
          description: Schema indicating location relevant to the warning.
          type: string

    Filter:
      type: object
      required:
        - label
        - expression
        - localVariables
      properties:
        label:
          description: The filter label.
          type: string
        expression:
          description: The filter expression.
          type: string
        model:
          description: The model to apply to the data before the filter is evaluated.
          type: string
        localVariables:
          description: The local variables specific to this filter label.
          type: array
          items:
            $ref: '#/components/schemas/LocalVariable'
          default: []
          maxItems: 100

    LocalVariable:
      type: object
      required:
        - key
        - expression
      properties:
        key:
          description: The name of the variable key.
          type: string
        expression:
          description: The expression of the variable.
          type: string

    Aggregation:
      description: The aggregation configuration for the cloud SIEM rule.
      type: object
      required:
        - sameValueFields
        - differentValueFields
        - count
        - duration
        - timeUnit
      properties:
        sameValueFields:
          description: Fields that have the same value.
          type: array
          items:
            type: string
          minItems: 1
        differentValueFields:
          description: Fields that have different values.
          type: array
          items:
            type: string
          default: []
        count:
          description: Aggregation count within the time window.
          format: int32
          minimum: 0
          maximum: 1000000
          type: integer
        duration:
          description: Aggregation time window duration.
          format: int32
          minimum: 0
          type: integer
        timeUnit:
          description: >-
            Unit of time that is specified in the duration field. Possible values are:
              1. `seconds`
              2. `minutes`
              3. `hours`
              4. `days`
              5. `weeks`
          type: string

    RuleActions:
      description: Action configuration for the cloud SIEM rule.
      type: object
      required:
        - sessionize
      properties:
        sessionize:
          description: Whether or not to sessionize the actions from this cloud SIEM rule.
          type: boolean
        sessionKey:
          description: Unique key for the session. When actions are sessionized, all events with the same sessionKey
            value follow the same session. Applicable only when the sessionize field is set to true.
          type: string
        sessionDurationTime:
          description: Session time duration. Applicable only when the sessionize field is set to true.
          type: integer
        sessionDurationTimeUnit:
          description: Unit of time that is specified in the sessionDurationTime field. Applicable only when the sessionize
            field is set to true.
          type: string
        onFirstTrigger:
          description: The list of actions to perform on the first trigger of the session.
          type: array
          items:
            $ref: '#/components/schemas/Action'
        onSubsequentTrigger:
          description: The list of actions to perform on the subsequent triggers of the session.
          type: array
          items:
            $ref: '#/components/schemas/Action'
        onEveryTrigger:
          description: The list of actions to perform on every trigger of the session.
          type: array
          items:
            $ref: '#/components/schemas/Action'
        onTimeInterval:
          description: The list of actions to perform after a specified time interval while the session is active.
          type: object
          $ref: '#/components/schemas/OnTimeIntervalActions'
        onTimeExpiration:
          description: The list of actions to perform when the session has expired.
          type: array
          items:
            $ref: '#/components/schemas/Action'

    OnTimeIntervalActions:
      description: The configuration of actions to perform on a time interval.
      type: object
      required:
        - timeInterval
        - timeUnit
        - actions
      properties:
        timeInterval:
          description: The interval time duration.
          type: integer
        timeUnit:
          description: The unit of the time specified in the duration field.
          type: string
        actions:
          description: The list of actions to perform.
          type: array
          items:
            $ref: '#/components/schemas/Action'

    Action:
      description: The base class of all action types.
      type: object
      discriminator:
        propertyName: actionType
      required:
        - actionType
      properties:
        actionType:
          description: Action type of the object model.
          type: string

    ActionExport:
      allOf:
        - $ref: '#/components/schemas/Action'
        - type: object
      discriminator:
        propertyName: actionExportType

    UpdateLookupTableRowAction:
      allOf:
        - $ref: '#/components/schemas/Action'
        - type: object
          required:
            - lookupTableId
            - columnValues
          properties:
            lookupTableId:
              description: The identifier of the lookup table being updated.
              type: string
            columnValues:
              description: The column values to update in the lookup table.
              type: object
              additionalProperties:
                type: string
            lookupTablePath:
              description: The path of the lookup table being updated.
              type: string

    RemoveLookupTableRowAction:
      allOf:
        - $ref: '#/components/schemas/Action'
        - type: object
          required:
            - lookupTableId
            - keyValues
          properties:
            lookupTableId:
              description: The identifier of the lookup table being updated.
              type: string
            keyValues:
              description: The key column values to remove from the table.
              type: object
              additionalProperties:
                type: string
            lookupTablePath:
              description: The path of the lookup table being updated.
              type: string

    UpdateLookupTableRowActionExport:
      allOf:
        - $ref: '#/components/schemas/ActionExport'
        - type: object
          required:
            - columnValues
          description: This is for exporting UpdateLookupTableRowAction
          properties:
            columnValues:
              description: The column values to update in the lookup table.
              type: object
              additionalProperties:
                type: string
            lookupTablePath:
              description: The path of the lookup table being updated.
              type: string

    RemoveLookupTableRowActionExport:
      allOf:
        - $ref: '#/components/schemas/ActionExport'
        - type: object
          required:
            - keyValues
          description: This is for exporting RemoveLookupTableRowAction
          properties:
            keyValues:
              description: The key column values to remove from the table.
              type: object
              additionalProperties:
                type: string
            lookupTablePath:
              description: The path of the lookup table being updated.
              type: string

    NotableEventAction:
      allOf:
        - $ref: '#/components/schemas/Action'
        - type: object
          required:
            - name
            - severity
            - fields
          properties:
            name:
              description: The name of the notable event.
              type: string
            description:
              description: The description of the notable event.
              type: string
            severity:
              description: The severity of the notable event.
              type: integer
              format: int32
            fields:
              description: The fields to add to the notable event.
              type: array
              items:
                $ref: '#/components/schemas/NotableEventField'
              minItems: 1
              maxItems: 100

    NotableEventField:
      type: object
      required:
        - alias
        - value
      properties:
        alias:
          description: The alias for the notable event field.
          type: string
        value:
          description: The value of the notable event field.
          type: string
        linkType:
          description: The link type for the notable event field.
          type: string
          default: ""

    NamedConnectionAction:
      allOf:
        - $ref: '#/components/schemas/Action'
        - type: object
          required:
            - connectionId
          properties:
            connectionId:
              description: The identifier of the connection.
              type: string
            payloadOverride:
              description: The override of the default JSON payload of the connection.
              type: string

    FieldValueTuple:
      type: object
      description: A field object, containing a name and its value and type.
      required:
        - name
        - value
        - valueType
      properties:
        name:
          description: The name of the field.
          type: string
        value:
          description: A value for the field.
          type: string
        valueType:
          description: The type of the value.
          type: string
          example:
            - IP Address
            - User
            - Host Name

    CreateInvestigationAction:
      allOf:
        - $ref: '#/components/schemas/Action'
        - type: object
          required:
            - severity
          properties:
            assigneeUserId:
              description: The identifier of the user the investigation will be assigned to.
              type: string
            description:
              description: The description of the investigation.
              type: string
            investigationType:
              description: The type of investigation.
              type: string
            status:
              description: The status of the investigation.
              type: string
              example:
                - new
                - open
                - closed
            severity:
              description: >-
                The severity of the investigation. The value is a free-form string. You can choose your own format
                like "Low, Medium and High" or "Blocker, Critical, Major and Minor" or "1, 2, 3, 4".
              type: string
              maxLength: 20
              example:
                - 1
                - 10
                - mid
                - high
            priority:
              description: The priority of the investigation.
              type: string
            baseProperties:
              type: array
              description: >-
                Initial properties for the investigation. An array of field names, field values, and field type tuples,
                where the field name is the name the field should get in the investigation, the field value is an expression
                that will extract a value from the events that caused the rule to fire, and the type is a link type (e.g.
                IP Address, USER, URL, etc).
              items:
                $ref: '#/components/schemas/FieldValueTuple'
              default: []

    EmailAction:
      allOf:
        - $ref: '#/components/schemas/Action'
        - type: object
          required:
            - recipients
            - subject
            - messageBody
          properties:
            recipients:
              description: A list of email addresses to send to when the rule fires.
              type: array
              items:
                type: string
            ccRecipients:
              description: A list of email addresses to copy to when the rule fires.
              type: array
              items:
                type: string
            bccRecipients:
              description: A list of email addresses to blind copy to when the rule fires.
              type: array
              items:
                type: string
            subject:
              description: The subject line of the email.
              type: string
            messageBody:
              description: The message body of the email to send.
              type: string
            bodyFormat:
              description: The format of the message body.
              type: string
              default: text/html
              example:
                - text/plain
                - text/html; charset="UTF-8"
            timeZone:
              description: Time zone.
              type: string

    WebhookHeader:
      type: object
      description: A header name and value.
      required:
        - name
        - value
      properties:
        name:
          description: The name of the header.
          type: string
        value:
          description: A value for the header.
          type: string

    WebhookPostAction:
      allOf:
        - $ref: '#/components/schemas/Action'
        - type: object
          required:
            - url
            - payload
          properties:
            url:
              description: The URL to submit the request to.
              type: string
            payload:
              description: The payload to be sent to the URL.
              type: string
            authorizationHeaders:
              description: The headers to supply authorization information.
              type: array
              items:
                $ref: '#/components/schemas/WebhookHeader'
              default: []
            customHeaders:
              description: Custom headers for the request.
              type: array
              items:
                $ref: '#/components/schemas/WebhookHeader'
              default: []

    NamedAction:
      allOf:
        - $ref: '#/components/schemas/Action'
        - type: object
          required:
            - actionPath
            - actionParameters
          properties:
            actionPath:
              description: The path to the named action to be invoked.
              type: string
            actionParameters:
              description: The parameters to be passed to the action to be invoked.
              type: object
              additionalProperties:
                type: string
