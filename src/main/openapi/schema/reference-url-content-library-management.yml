# This is based on external-api/src/main/swagger/schema/parsers-content-library-management.yml
paths:
  referenceUrls:
    root:
      get:
        summary: Get the root folder in the library.
        description: >-
          Get the root folder in the library.
        operationId: getReferenceUrlLibraryRoot
        tags:
          - referenceUrlLibraryManagement
        responses:
          200:
            description: Root folder in the library.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ReferenceUrlLibraryFolderResponse'
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

    post:
      summary: >
        Create a folder or reference url.
      description: >-
        Create a folder or reference url.
      operationId: referenceUrlCreate
      tags:
        - referenceUrlLibraryManagement
      parameters:
        - name: parentId
          description: Identifier of the parent folder in which to create the folder or reference url.
          required: true
          in: query
          schema:
            type: string
      requestBody:
        description: The folder or reference url to be created.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReferenceUrlLibraryBase'
      responses:
        200:
          description: Newly created folder or reference url.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceUrlLibraryBaseResponse'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

    get:
      summary: Bulk read folders and reference urls.
      description: >-
        Bulk read folders and reference urls by the given identifiers from the library.
      operationId: referenceUrlsReadByIds
      tags:
        - referenceUrlLibraryManagement
      parameters:
        - name: ids
          description: A comma-separated list of identifiers.
          required: true
          in: query
          example: 0000000000000001,0000000000000002,0000000000000003
          schema:
            items:
              type: string
            type: array
      responses:
        200:
          description: A map between an identifier and its definition (folder or reference url).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdToReferenceUrlLibraryBaseResponseMap'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

    delete:
      summary: >
        Bulk delete folders and reference urls.
      description: >-
        Bulk delete folders and reference urls by the given identifiers from the library.
      operationId: referenceUrlsDeleteByIds
      tags:
        - referenceUrlLibraryManagement
      parameters:
        - name: ids
          description: A comma-separated list of identifiers.
          required: true
          in: query
          example: 0000000000000001,0000000000000002,0000000000000003
          schema:
            items:
              type: string
            type: array
      responses:
        200:
          description: A map between the deleted identifier and its meta data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdToReferenceUrlLibraryBaseResponseMap'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

    path:
      get:
        summary: Read a folder or reference url by its path.
        description: >-
          Read a folder or reference url by its path.
        operationId: referenceUrlGetByPath
        tags:
          - referenceUrlLibraryManagement
        parameters:
          - name: path
            description: The path of the folder or reference url.
            required: true
            in: query
            schema:
              type: string
        responses:
          200:
            description: Requested folder or reference url.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ReferenceUrlLibraryBaseResponse'
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

    search:
      get:
        summary: Search for folders or reference urls.
        description: >-
          Search for a folder or reference url in the cloud SIEM reference urls library structure.
        operationId: referenceUrlsSearch
        tags:
          - referenceUrlLibraryManagement
        parameters:
          - name: query
            description: >-
              The search query to find folder or reference urls. Below is the list of different filters with examples:
                - **createdBy** : Filter by the user's identifier who created the content. Example: `createdBy:000000000000968B`.
                - **createdBefore** : Filter by the content objects created before the given timestamp(in milliseconds).
              Example: `createdBefore:1457997222`.
                - **createdAfter** : Filter by the content objects created after the given timestamp(in milliseconds).
              Example: `createdAfter:1457997111`.
                - **modifiedBefore** : Filter by the content objects modified before the given timestamp(in milliseconds).
              Example: `modifiedBefore:1457997222`.
                - **modifiedAfter** : Filter by the content objects modified after the given timestamp(in milliseconds).
              Example: `modifiedAfter:1457997111`.
                - **type** : Filter by the type of the content object. Example: `type:folder`.

              You can also use multiple filters in one query. For example to search for all content objects created by
              user with identifier 000000000000968B with creation timestamp after 1457997222 containing the text Test,
              the query would look like:

                `createdBy:000000000000968B createdAfter:1457997222 Test`
            required: true
            in: query
            schema:
              type: string
            example: "createdBy:000000000000968B Test"
          - name: limit
            description: Maximum number of items you want in the response.
            required: false
            in: query
            example: 10
            schema:
              default: 100
              type: integer
              format: int32
          - name: offset
            description: The position or row from where to start the search operation.
            required: false
            in: query
            example: 5
            schema:
              default: 0
              type: integer
              format: int32
        responses:
          200:
            description: List of folders and reference urls matching the search query.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ListReferenceUrlLibraryItemWithPath'
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

  referenceUrlId:
    put:
      summary: >
        Update a folder or reference url.
      description: >-
        Update a folder or reference url.
      operationId: referenceUrlUpdateById
      tags:
        - referenceUrlLibraryManagement
      parameters:
        - name: id
          description: Identifier of the folder or reference url to update.
          required: true
          in: path
          schema:
            type: string
      requestBody:
        description: >-
          The folder or reference url to be updated. Content version must match its latest version number in the library.
          Any staled version will not be updated.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReferenceUrlLibraryBaseUpdate'
      responses:
        200:
          description: Updated folder or reference url.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceUrlLibraryBaseResponse'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

    get:
      summary: >
        Read a folder or reference url.
      description: >-
        Read a folder or reference url.
      operationId: referenceUrlReadById
      tags:
        - referenceUrlLibraryManagement
      parameters:
        - name: id
          description: Identifier of the folder or reference url to read.
          required: true
          in: path
          schema:
            type: string
      responses:
        200:
          description: Requested folder or reference url.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceUrlLibraryBaseResponse'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

    delete:
      summary: >
        Delete a folder or reference url.
      description: >-
        Delete a folder or reference url.
      operationId: referenceUrlDeleteById
      tags:
        - referenceUrlLibraryManagement
      parameters:
        - name: id
          description: Identifier of the folder or reference url to delete.
          required: true
          in: path
          schema:
            type: string
      responses:
        204:
          description: The folder or reference url was successfully deleted.
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

    unlock:
      post:
        summary: Unlock a folder or a reference url.
        description: >-
          Unlocking requires the `LockReferenceUrls` capability. It is only possible to unlock the highest locked object
          in a tree of locked objects. Unlocking recursively unlocks all of the objects children.
        operationId: referenceUrlUnlockById
        tags:
          - referenceUrlLibraryManagement
        parameters:
          - name: id
            description: The id of the folder or reference url that needs to be unlocked.
            required: true
            in: path
            schema:
              type: string
        responses:
          200:
            description: Updated folder or reference url.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ReferenceUrlLibraryBaseResponse'
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

    lock:
      post:
        summary: Lock a folder or a reference url.
        description: >-
          Locking requires the `LockReferenceUrls` capability. When an object is locked, it can't be moved or deleted
          and only the local fields can be modified. Locking recursively locks all of the objects children.
        operationId: referenceUrlLockById
        tags:
          - referenceUrlLibraryManagement
        parameters:
          - name: id
            description: The id of the folder or reference url that needs to be locked.
            required: true
            in: path
            schema:
              type: string
        responses:
          200:
            description: Updated folder or reference url.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ReferenceUrlLibraryBaseResponse'
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

    path:
      get:
        summary: Get full path of folder or reference url.
        description: >-
          Get full path of folder or reference url.
        operationId: getReferenceUrlFullPath
        tags:
          - referenceUrlLibraryManagement
        parameters:
          - name: id
            description: Identifier of the folder or reference url.
            required: true
            in: path
            schema:
              type: string
        responses:
          200:
            description: Full path of the folder or reference url.
            content:
              application/json:
                schema:
                  $ref: './content-library-models.yml#/components/schemas/Path'
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

    move:
      post:
        summary: Move a folder or reference url.
        description: >-
          Move a folder or reference url.
        operationId: referenceUrlMove
        tags:
          - referenceUrlLibraryManagement
        parameters:
          - name: id
            description: Identifier of the folder or reference url to move.
            required: true
            in: path
            schema:
              type: string
          - name: parentId
            description: Identifier of the parent folder to move the folder or reference url to.
            required: true
            in: query
            schema:
              type: string
        responses:
          200:
            description: Moved folder or reference url.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ReferenceUrlLibraryBaseResponse'
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

    copy:
      post:
        summary: Copy a folder or reference url.
        description: >-
          Copy a folder or reference url.
        operationId: referenceUrlCopy
        tags:
          - referenceUrlLibraryManagement
        parameters:
          - name: id
            description: Identifier of the folder or reference url to copy.
            required: true
            in: path
            schema:
              type: string
        requestBody:
          description: >-
            Fields include:
              1) Identifier of the parent folder to copy to.
              2) Optionally provide a new name.
              3) Optionally provide a new description.
              4) Optionally set to true if you want to copy and preserved the locked status. Requires `LockReferenceUrls`
            capability.
          required: true
          content:
            application/json:
              schema:
                $ref: './content-library-models.yml#/components/schemas/ContentCopyParams'
        responses:
          200:
            description: Newly copied folder or reference url.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ReferenceUrlLibraryBaseResponse'
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

    export:
      get:
        summary: Export a folder or reference url.
        description: Export a folder or reference url.
        operationId: referenceUrlExportItem
        tags:
          - referenceUrlLibraryManagement
        parameters:
          - name: id
            description: Identifier of the folder or referenceUrl to export.
            required: true
            in: path
            schema:
              type: string
          - name: preserveLock
            description: >-
              Set this to true if you want to export an object and preserve the locked status.
            required: false
            in: query
            schema:
              default: false
              type: boolean
        responses:
          200:
            description: Exported folder or reference url
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ReferenceUrlLibraryExportBase'
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

    import:
      post:
        summary: Import a folder or reference url
        description: >-
          Import a folder or reference url
        operationId: referenceUrlImportItem
        tags:
          - referenceUrlLibraryManagement
        parameters:
          - name: parentId
            description: Identifier of the parent folder in which to import the folder or reference url.
            required: true
            in: path
            schema:
              type: string
        requestBody:
          description: >-
            The folder or reference url to be imported.
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceUrlLibraryExportBase'
        responses:
          200:
            description: Newly imported folder or reference url.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ReferenceUrlLibraryBaseResponse'
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

  system:
    referenceUrls:
      root:
        get:
          x-visibility: private
          summary: Get the root folder in the library.
          description: >-
            Get the root folder in the library.
          operationId: getSystemReferenceUrlLibraryRoot
          tags:
            - referenceUrlLibraryManagement
          responses:
            200:
              description: Root folder in the library.
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ReferenceUrlLibraryFolderResponse'
            default:
              description: Operation failed with an error.
              content:
                application/json:
                  schema:
                    $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

      post:
        x-visibility: private
        summary: >
          Create a folder or reference url.
        description: >-
          Create a folder or reference url.
        operationId: systemReferenceUrlCreate
        tags:
          - referenceUrlLibraryManagement
        parameters:
          - name: parentId
            description: Identifier of the parent folder in which to create the folder or reference url.
            required: true
            in: query
            schema:
              type: string
        requestBody:
          description: The folder or reference url to be created.
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceUrlLibraryBase'
        responses:
          200:
            description: Newly created folder or reference url.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ReferenceUrlLibraryBaseResponse'
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

      get:
        x-visibility: private
        summary: Bulk read folders and reference urls.
        description: >-
          Bulk read folders and reference urls by the given identifiers from the library.
        operationId: systemReferenceUrlsReadByIds
        tags:
          - referenceUrlLibraryManagement
        parameters:
          - name: ids
            description: A comma-separated list of identifiers.
            required: true
            in: query
            example: 0000000000000001,0000000000000002,0000000000000003
            schema:
              items:
                type: string
              type: array
        responses:
          200:
            description: A map between an identifier and its definition (folder or reference url).
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/IdToReferenceUrlLibraryBaseResponseMap'
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

      delete:
        x-visibility: private
        summary: >
          Bulk delete folders and reference urls.
        description: >-
          Bulk delete folders and reference urls by the given identifiers from the library.
        operationId: systemReferenceUrlsDeleteByIds
        tags:
          - referenceUrlLibraryManagement
        parameters:
          - name: ids
            description: A comma-separated list of identifiers.
            required: true
            in: query
            example: 0000000000000001,0000000000000002,0000000000000003
            schema:
              items:
                type: string
              type: array
        responses:
          200:
            description: A map between the deleted identifier and its meta data.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/IdToReferenceUrlLibraryBaseResponseMap'
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

      path:
        get:
          x-visibility: private
          summary: Read a folder or reference url by its path.
          description: >-
            Read a folder or reference url by its path.
          operationId: systemReferenceUrlGetByPath
          tags:
            - referenceUrlLibraryManagement
          parameters:
            - name: path
              description: The path of the folder or reference url.
              required: true
              in: query
              schema:
                type: string
          responses:
            200:
              description: Requested folder or reference url.
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ReferenceUrlLibraryBaseResponse'
            default:
              description: Operation failed with an error.
              content:
                application/json:
                  schema:
                    $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

      search:
        get:
          x-visibility: private
          summary: Search for folders or reference urls.
          description: >-
            Search for a folder or reference url in the cloud SIEM reference urls library structure.
          operationId: systemReferenceUrlsSearch
          tags:
            - referenceUrlLibraryManagement
          parameters:
            - name: query
              description: >-
                The search query to find folder or reference urls. Below is the list of different filters with examples:
                  - **createdBy** : Filter by the user's identifier who created the content. Example: `createdBy:000000000000968B`.
                  - **createdBefore** : Filter by the content objects created before the given timestamp(in milliseconds).
                Example: `createdBefore:1457997222`.
                  - **createdAfter** : Filter by the content objects created after the given timestamp(in milliseconds).
                Example: `createdAfter:1457997111`.
                  - **modifiedBefore** : Filter by the content objects modified before the given timestamp(in milliseconds).
                Example: `modifiedBefore:1457997222`.
                  - **modifiedAfter** : Filter by the content objects modified after the given timestamp(in milliseconds).
                Example: `modifiedAfter:1457997111`.
                  - **type** : Filter by the type of the content object. Example: `type:folder`.

                You can also use multiple filters in one query. For example to search for all content objects created by
                user with identifier 000000000000968B with creation timestamp after 1457997222 containing the text Test,
                the query would look like:

                  `createdBy:000000000000968B createdAfter:1457997222 Test`
              required: true
              in: query
              schema:
                type: string
              example: "createdBy:000000000000968B Test"
            - name: limit
              description: Maximum number of items you want in the response.
              required: false
              in: query
              example: 10
              schema:
                default: 100
                type: integer
                format: int32
            - name: offset
              description: The position or row from where to start the search operation.
              required: false
              in: query
              example: 5
              schema:
                default: 0
                type: integer
                format: int32
          responses:
            200:
              description: List of folders and reference urls matching the search query.
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ListReferenceUrlLibraryItemWithPath'
            default:
              description: Operation failed with an error.
              content:
                application/json:
                  schema:
                    $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

    referenceUrlId:
      put:
        x-visibility: private
        summary: >
          Update a folder or reference url.
        description: >-
          Update a folder or reference url.
        operationId: systemReferenceUrlUpdateById
        tags:
          - referenceUrlLibraryManagement
        parameters:
          - name: id
            description: Identifier of the folder or reference url to update.
            required: true
            in: path
            schema:
              type: string
        requestBody:
          description: >-
            The folder or reference url to be updated. Content version must match its latest version number in the library.
            Any staled version will not be updated.
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceUrlLibraryBaseUpdate'
        responses:
          200:
            description: Updated folder or reference url.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ReferenceUrlLibraryBaseResponse'
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

      get:
        x-visibility: private
        summary: >
          Read a folder or reference url.
        description: >-
          Read a folder or reference url.
        operationId: systemReferenceUrlReadById
        tags:
          - referenceUrlLibraryManagement
        parameters:
          - name: id
            description: Identifier of the folder or reference url to read.
            required: true
            in: path
            schema:
              type: string
        responses:
          200:
            description: Requested folder or reference url.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ReferenceUrlLibraryBaseResponse'
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

      delete:
        x-visibility: private
        summary: >
          Delete a folder or reference url.
        description: >-
          Delete a folder or reference url.
        operationId: systemReferenceUrlDeleteById
        tags:
          - referenceUrlLibraryManagement
        parameters:
          - name: id
            description: Identifier of the folder or reference url to delete.
            required: true
            in: path
            schema:
              type: string
        responses:
          204:
            description: The folder or reference url was successfully deleted.
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

      unlock:
        post:
          x-visibility: private
          summary: Unlock a folder or a reference url.
          description: >-
            Unlocking requires the `LockReferenceUrls` capability. It is only possible to unlock the highest locked object
            in a tree of locked objects. Unlocking recursively unlocks all of the objects children.
          operationId: systemReferenceUrlUnlockById
          tags:
            - referenceUrlLibraryManagement
          parameters:
            - name: id
              description: The id of the folder or reference url that needs to be unlocked.
              required: true
              in: path
              schema:
                type: string
          responses:
            200:
              description: Updated folder or reference url.
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ReferenceUrlLibraryBaseResponse'
            default:
              description: Operation failed with an error.
              content:
                application/json:
                  schema:
                    $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

      lock:
        post:
          x-visibility: private
          summary: Lock a folder or a reference url.
          description: >-
            Locking requires the `LockReferenceUrls` capability. When an object is locked, it can't be moved or deleted
            and only the local fields can be modified. Locking recursively locks all of the objects children.
          operationId: systemReferenceUrlLockById
          tags:
            - referenceUrlLibraryManagement
          parameters:
            - name: id
              description: The id of the folder or reference url that needs to be locked.
              required: true
              in: path
              schema:
                type: string
          responses:
            200:
              description: Updated folder or reference url.
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ReferenceUrlLibraryBaseResponse'
            default:
              description: Operation failed with an error.
              content:
                application/json:
                  schema:
                    $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

      path:
        get:
          x-visibility: private
          summary: Get full path of folder or reference url.
          description: >-
            Get full path of folder or reference url.
          operationId: getSystemReferenceUrlFullPath
          tags:
            - referenceUrlLibraryManagement
          parameters:
            - name: id
              description: Identifier of the folder or reference url.
              required: true
              in: path
              schema:
                type: string
          responses:
            200:
              description: Full path of the folder or reference url.
              content:
                application/json:
                  schema:
                    $ref: './content-library-models.yml#/components/schemas/Path'
            default:
              description: Operation failed with an error.
              content:
                application/json:
                  schema:
                    $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

      move:
        post:
          x-visibility: private
          summary: Move a folder or reference url.
          description: >-
            Move a folder or reference url.
          operationId: systemReferenceUrlMove
          tags:
            - referenceUrlLibraryManagement
          parameters:
            - name: id
              description: Identifier of the folder or reference url to move.
              required: true
              in: path
              schema:
                type: string
            - name: parentId
              description: Identifier of the parent folder to move the folder or reference url to.
              required: true
              in: query
              schema:
                type: string
          responses:
            200:
              description: Moved folder or reference url.
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ReferenceUrlLibraryBaseResponse'
            default:
              description: Operation failed with an error.
              content:
                application/json:
                  schema:
                    $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

      copy:
        post:
          x-visibility: private
          summary: Copy a folder or reference url.
          description: >-
            Copy a folder or reference url.
          operationId: systemReferenceUrlCopy
          tags:
            - referenceUrlLibraryManagement
          parameters:
            - name: id
              description: Identifier of the folder or reference url to copy.
              required: true
              in: path
              schema:
                type: string
          requestBody:
            description: >-
              Fields include:
                1) Identifier of the parent folder to copy to.
                2) Optionally provide a new name.
                3) Optionally provide a new description.
                4) Optionally set to true if you want to copy and preserved the locked status. Requires `LockReferenceUrls`
              capability.
            required: true
            content:
              application/json:
                schema:
                  $ref: './content-library-models.yml#/components/schemas/ContentCopyParams'
          responses:
            200:
              description: Newly copied folder or reference url.
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ReferenceUrlLibraryBaseResponse'
            default:
              description: Operation failed with an error.
              content:
                application/json:
                  schema:
                    $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

      export:
        get:
          x-visibility: private
          summary: Export a folder or reference url.
          description: Export a folder or reference url.
          operationId: systemReferenceUrlExportItem
          tags:
            - referenceUrlLibraryManagement
          parameters:
            - name: id
              description: Identifier of the folder or referenceUrl to export.
              required: true
              in: path
              schema:
                type: string
            - name: preserveLock
              description: >-
                Set this to true if you want to export an object and preserve the locked status.
              required: false
              in: query
              schema:
                default: false
                type: boolean
          responses:
            200:
              description: Exported folder or reference url
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ReferenceUrlLibraryExportBase'
            default:
              description: Operation failed with an error.
              content:
                application/json:
                  schema:
                    $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

      import:
        post:
          x-visibility: private
          summary: Import a folder or reference url
          description: >-
            Import a folder or reference url
          operationId: systemReferenceUrlImportItem
          tags:
            - referenceUrlLibraryManagement
          parameters:
            - name: parentId
              description: Identifier of the parent folder in which to import the folder or reference url.
              required: true
              in: path
              schema:
                type: string
          requestBody:
            description: >-
              The folder or reference url to be imported.
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ReferenceUrlLibraryExportBase'
          responses:
            200:
              description: Newly imported folder or reference url.
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ReferenceUrlLibraryBaseResponse'
            default:
              description: Operation failed with an error.
              content:
                application/json:
                  schema:
                    $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

components:
  schemas:
    ReferenceUrlLibraryBase:
      type: object
      discriminator:
        propertyName: type
      required:
        - name
        - description
        - type
      properties:
        name:
          description: Name of the folder or reference url.
          type: string
          minLength: 1
          maxLength: 255
        description:
          description: Description of the folder or reference url.
          type: string
          maxLength: 4096
        type:
          description: Type of the object model.
          type: string
        isLocked:
          description: >-
            Locking/Unlocking requires the `LockReferenceUrls` capability. Locked objects can only be `Localized`. Updating
            or moving requires unlocking the object. Locking/Unlocking recursively locks all of the objects children.
            All children of a locked object must be locked.
          type: boolean
          default: false

    ReferenceUrlLibraryReferenceUrl:
      allOf:
        - $ref: '#/components/schemas/ReferenceUrlLibraryBase'
        - type: object
          required:
            - referenceUrlDetails
          properties:
            referenceUrlDetails:
              $ref: '#/components/schemas/ReferenceUrlDetails'

    ReferenceUrlLibraryFolder:
      allOf:
        - $ref: '#/components/schemas/ReferenceUrlLibraryBase'

    ReferenceUrlLibraryBaseUpdate:
      type: object
      discriminator:
        propertyName: type
      required:
        - name
        - description
        - version
      properties:
        name:
          description: Name of the folder or reference url.
          type: string
          minLength: 1
          maxLength: 255
        description:
          description: Description of the folder or reference url.
          type: string
          maxLength: 4096
        version:
          description: Version of the folder or reference url.
          type: integer
          format: int64
        type:
          description: Type of the object model.
          type: string

    ReferenceUrlLibraryReferenceUrlUpdate:
      allOf:
        - $ref: '#/components/schemas/ReferenceUrlLibraryBaseUpdate'
        - type: object
          required:
            - referenceUrlDetails
          properties:
            referenceUrlDetails:
              $ref: '#/components/schemas/ReferenceUrlDetails'

    ReferenceUrlLibraryFolderUpdate:
      allOf:
        - $ref: '#/components/schemas/ReferenceUrlLibraryBaseUpdate'

    ReferenceUrlLibraryBaseResponse:
      type: object
      discriminator:
        propertyName: type
      required:
        - id
        - name
        - description
        - version
        - createdAt
        - createdBy
        - modifiedAt
        - modifiedBy
        - parentId
        - contentType
        - type
        - isLocked
        - isSystem
        - isMutable
      properties:
        id:
          description: Identifier of the folder or reference url.
          type: string
        name:
          description: Name of the folder or reference url.
          type: string
        description:
          description: Description of the folder or reference url.
          type: string
        version:
          description: Version of the folder or reference url.
          type: integer
          format: int64
        createdAt:
          description: >-
            Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format.
          type: string
          format: date-time
        createdBy:
          description: Identifier of the user who created the resource.
          type: string
        modifiedAt:
          description: Last modification timestamp in UTC.
          type: string
          format: date-time
        modifiedBy:
          description: Identifier of the user who last modified the resource.
          type: string
        parentId:
          description: Identifier of the parent folder.
          type: string
        contentType:
          description: >-
            Type of the content. Valid values:
              1) Folder
              2) Reference Url
          type: string
        type:
          description: Type of the object model.
          type: string
        isLocked:
          description: Whether the object is locked.
          type: boolean
        isSystem:
          description: >-
            System objects are objects provided by Sumo Logic. System objects can only be localized. Non-local fields
            can't be updated.
          type: boolean
        isMutable:
          description: >-
            Immutable objects are "READ-ONLY".
          type: boolean

    ListReferenceUrlLibraryItemWithPath:
      description: List of folders or reference urls.
      type: array
      items:
        $ref: '#/components/schemas/ReferenceUrlLibraryItemWithPath'

    ReferenceUrlLibraryItemWithPath:
      type: object
      required:
        - item
        - path
      properties:
        item:
          description: Folder or parser.
          $ref: '#/components/schemas/ReferenceUrlLibraryBaseResponse'
        path:
          description: Path of the folder or parser.
          type: string
          example: "/ReferenceUrls/Sample"

    ReferenceUrlLibraryReferenceUrlResponse:
      allOf:
        - $ref: '#/components/schemas/ReferenceUrlLibraryBaseResponse'
        - type: object
          required:
            - referenceUrlDetails
          properties:
            referenceUrlDetails:
              $ref: '#/components/schemas/ReferenceUrlDetails'

    ReferenceUrlLibraryFolderResponse:
      allOf:
        - $ref: '#/components/schemas/ReferenceUrlLibraryBaseResponse'
        - type: object
          required:
            - children
          properties:
            children:
              description: Children of the folder.
              type: array
              items:
                $ref: '#/components/schemas/ReferenceUrlLibraryBaseResponse'

    IdToReferenceUrlLibraryBaseResponseMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ReferenceUrlLibraryBaseResponse'

    ReferenceUrlLibraryExportBase:
      type: object
      discriminator:
        propertyName: type
      required:
        - name
        - description
        - type
      properties:
        name:
          description: Name of the folder or reference url.
          type: string
          minLength: 1
          maxLength: 255
        description:
          description: Description of the folder or reference url.
          type: string
          maxLength: 4096
        type:
          description: Type of the object model.
          type: string
        isLocked:
          description: Whether the object is locked.
          type: boolean

    ReferenceUrlLibraryReferenceUrlExport:
      allOf:
        - $ref: '#/components/schemas/ReferenceUrlLibraryExportBase'
        - type: object
          required:
            - referenceUrlDetails
          properties:
            referenceUrlDetails:
              $ref: '#/components/schemas/ReferenceUrlDetails'

    ReferenceUrlLibraryFolderExport:
      allOf:
        - $ref: '#/components/schemas/ReferenceUrlLibraryExportBase'
        - type: object
          properties:
            children:
              description: Children of the folder
              type: array
              items:
                $ref: '#/components/schemas/ReferenceUrlLibraryExportBase'

    ReferenceUrlDetails:
      description: Details of the reference url.
      type: object
      required:
        - linkKeyType
        - label
        - urlTemplate
        - isActive
      properties:
        linkKeyType:
          description: The link key type of the reference url.
          type: string
          example: "IP Address"
        label:
          description: The label of the reference url.
          type: string
          example: "Alien Vault"
        urlTemplate:
          description: The url template of the reference url.
          type: string
          example: "https://otx.alienvault.com/browse/pulses?q=indicator:{link_key}"
        isActive:
          description: The activation state of the reference url.
          type: boolean
          example: true
          default: true
        localLabel:
          description: The local field of the label.
          type: string
          example: "Alien Vault"
        localUrlTemplate:
          description: The local field of the url template.
          type: string
          example: "https://otx.alienvault.com/browse/pulses?q=indicator:{link_key}"
        localIsActive:
          description: The local field of the activation state.
          type: boolean
          example: true
