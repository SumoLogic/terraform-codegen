paths:
  # /fields endpoint
  fields:
    get:
      summary: Get a list of all custom fields.
      description: >-
        Fetch the list of all custom fields. These fields can be used in logs searches. Their values can be also sent
        with logs or set in collectors / sources configuration. A custom field is created by user manually by e.g. creating
        a Field Extraction Rule, using Fields Management page or API.
      operationId: listCustomFields
      tags:
      - fieldManagementV1
      responses:
        200:
          description: List of all custom fields.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCustomFieldsResponse'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
    post:
      summary: Create a new custom field.
      description: >-
        Operation creates a new custom field. By default all new fields are enabled and their values are accepted by
        Sumo Logic. The number of fields is limited per organisation.
      operationId: createField
      tags:
      - fieldManagementV1
      parameters: []
      requestBody:
        description: Name of a field to add.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldName'
      responses:
        200:
          description: The field has been created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomField'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
  # /fields/all/names
  allFieldNames:
    get:
      x-visibility: "private"
      summary: Get a list of field names including built-in and custom.
      description: >-
        Endpoint to fetch only names of all fields. It doesn't provide information where fields are used and as a results
        it's much more lightweight.
      operationId: listFieldNames
      tags:
      - fieldManagementV1
      responses:
        200:
          description: >
            List of all field names.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFieldNamesResponse'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

  # /fields/dropped endpoint
  droppedFields:
    get:
      summary: Get a list of dropped fields.
      description: >-
        Fetches a list of unknown or disabled fields which Sumo Logic noticed to be incoming with logs. In order to save
        these values a field must both exist and be enabled. Otherwise, the values of this field are going to be dropped.
      operationId: listDroppedFields
      tags:
      - fieldManagementV1
      responses:
        200:
          description: >
            List of fields which values are not persisted but are seen as incoming to Sumo.
            Manual configuration is necessary for them.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDroppedFieldsResponse'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
  # /fields/builtin endpoint
  builtinFields:
    get:
      summary: Get a list of built-in fields.
      description: >-
        Built-in fields are created automatically by Sumo Logic for standard configuration purposes. They include e.g.
        `_sourceHost` and `_sourceCategory`. This kind of a field can't be deleted or disabled. This operation allows
        to fetch the list of all built-in fields.
      operationId: listBuiltInFields
      tags:
      - fieldManagementV1
      responses:
        200:
          description: List of all built-in fields.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBuiltinFieldsResponse'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
  builtinFieldId:
    # /fields/builtin/{id} endpoint
    get:
      summary: Get a built-in field.
      description: >-
        Provide details of a built in-field. Details include information where a given field is used.
      operationId: getBuiltInField
      tags:
      - fieldManagementV1
      parameters:
      - name: id
        description: Field identifier.
        required: true
        in: path
        example: "000000000000000A"
        schema:
          type: string
      responses:
        200:
          description: Built-in field details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuiltinField'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
  fieldId:
    # /fields/{id} endpoint
    get:
      summary: Get a custom field details.
      description: >-
        Provide details of a field with specified identifier. Details include information where a given field is used.
      operationId: getCustomField
      tags:
      - fieldManagementV1
      parameters:
      - name: id
        description: Identifier of a field.
        required: true
        in: path
        example: "00000000031D02DA"
        schema:
          type: string
      responses:
        200:
          description: Details of a custom field that was requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomField'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
    delete:
      summary: Delete a custom field.
      description: >-
        Operation removes a custom field. Please be careful while using this endpoint. Removing a field might break some
        of your log searches including e.g. dashboards, scheduled views, scheduled searches and API calls.
      operationId: deleteField
      tags:
      - fieldManagementV1
      parameters:
      - name: id
        description: Identifier of a field to delete.
        required: true
        in: path
        example: "00000000031D02DA"
        schema:
          type: string
      responses:
        204:
          description: The field was successfully deleted.
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
  # /fields/{id}/enable endpoint
  enableField:
    put:
      summary: Enable custom field with a specified identifier.
      description: >-
        Field has to be enabled in order to accept and persist it's values. This operation ensures that a specified field
        is enabled and Sumo Logic will treat it as a safe to process. All manually created custom fields are by default
        already enabled.
      operationId: enableField
      tags:
      - fieldManagementV1
      parameters:
      - name: id
        description: Identifier of a field to enable.
        required: true
        in: path
        example: "00000000031D02DA"
        schema:
          type: string
      responses:
        204:
          description: Field has been enabled.
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
  # /fields/{id}/disable endpoint
  disableField:
    delete:
      summary: Disable a custom field.
      description: >-
        After disabling a field Sumo Logic will start discarding its incoming values at ingest. As a result, they won't
        be persisted. The historical values are not going to be removed and it will be still possible to find them by
        searching logs.
      operationId: disableField
      tags:
      - fieldManagementV1
      parameters:
      - name: id
        description: Identifier of a field to disable.
        required: true
        in: path
        example: "00000000031D02DA"
        schema:
          type: string
      responses:
        204:
          description: Field has been disabled.
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
  # /fields/{id}/collectors endpoint
  fieldCollectors:
    get:
      summary: Get a list of collectors for a custom field.
      description: >-
        Collectors can be configured to add extra fields to incoming log messages. This operation allows to find which
        collectors use a given field. It's not possible to remove a field which is used by at least one collector.
      operationId: getCollectors
      tags:
      - fieldManagementV1
      parameters:
      - name: id
        description: Field identifier to get collectors for.
        required: true
        in: path
        example: "00000000031D02DA"
        schema:
          type: string
      - name: limit
        description: >-
          Limit the number of collectors returned in the response. The number of collectors returned may be less than
          the `limit`.
        required: false
        in: query
        schema:
          default: 100
          minimum: 1
          type: integer
          maximum: 1000
          format: int32
      - name: token
        description: >-
          Continuation token to get the next page of results. A page object with the next continuation token is returned
          in the response body. Subsequent GET requests should specify the continuation token to get the next page of
          results.
        required: false
        in: query
        schema:
          type: string
      responses:
        200:
          description: List of collectors which use this field.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCollectorsResponse'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
  # /fields/{id}/sources endpoint
  fieldSources:
    get:
      summary: Get a list of sources for a custom field.
      description: >-
        Sources can be configured to add extra fields to incoming log messages. This operation allows to find which sources
        use a given field. It's not possible to remove a field which is used by at least one source.
      operationId: getSources
      tags:
      - fieldManagementV1
      parameters:
      - name: id
        description: Field identifier to get sources for.
        required: true
        in: path
        schema:
          type: string
      - name: limit
        description: >-
          Limit the number of sources returned in the response. The number of sources returned may be less than the `limit`.
        required: false
        in: query
        schema:
          default: 100
          minimum: 1
          type: integer
          maximum: 1000
          format: int32
      - name: token
        description: >-
          Continuation token to get the next page of results. A page object with the next continuation token is returned
          in the response body. Subsequent GET requests should specify the continuation token to get the next page of
          results.
        required: false
        in: query
        schema:
          type: string
      responses:
        200:
          description: List of sources which use this field.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSourcesResponse'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
  # /fields/quota endpoint
  fieldQuota:
    get:
      summary: Get quota information.
      description: Every customer can use a limited number of fields. This endpoint allows to learn about these limitations
        and remaining quota.
      operationId: getFieldQuota
      tags:
      - fieldManagementV1
      responses:
        200:
          description: Current state of field-related quota usage (fields count).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldQuotaUsage'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
components:
  schemas:
    FieldName:
      type: object
      required:
      - fieldName
      properties:
        fieldName:
          description: Field name.
          type: string
          minLength: 1
          maxLength: 255
          example: "hostIP"
    CustomField:
      allOf:
      - $ref: '#/components/schemas/FieldName'
      - type: object
        required:
        - fieldId
        - dataType
        - state
        properties:
          fieldId:
            description: Identifier of the field.
            type: string
            example: "00000000031D02DA"
          dataType:
            description: Field type. Possible values are `String`, `Long`, `Int`, `Double`, `Boolean`.
            type: string
            example: "String"
          state:
            description: >-
              Indicates whether the field is enabled and its values are being accepted. Possible values are `Enabled`
              and `Disabled`.
            type: string
            example: "Enabled"
          fieldExtractionRules:
            description: An array of hexadecimal identifiers of field extraction rules which use this field.
            type: array
            items:
              type: string
          roles:
            description: An array of hexadecimal identifiers of roles which use this field in the search filter.
            type: array
            items:
              type: string
          partitions:
            description: An array of hexadecimal identifiers of partitions which use this field in the routing expression.
            type: array
            items:
              type: string
          collectorsCount:
            description: Total number of collectors using this field.
            type: integer
            format: int32
            example: 228
          sourcesCount:
            description: Total number of sources using this field.
            type: integer
            format: int32
            example: 228
    BuiltinField:
      allOf:
      - $ref: '#/components/schemas/FieldName'
      - type: object
        required:
        - fieldId
        - dataType
        - state
        properties:
          fieldId:
            description: Identifier of the field.
            type: string
            example: "00000000031D02DA"
          dataType:
            description: Field type. Possible values are `String`, `Long`, `Int`, `Double`, `Boolean`.
            type: string
            example: "String"
          state:
            description: >-
              Indicates whether the field is enabled and its values are being accepted. Possible values are `Enabled`
              and `Disabled`.
            type: string
            example: "Enabled"
          fieldExtractionRules:
            description: An array of hexadecimal identifiers of field extraction rules which use this field.
            type: array
            items:
              type: string
          roles:
            description: An array of hexadecimal identifiers of roles which use this field in the search filter.
            type: array
            items:
              type: string
          partitions:
            description: An array of hexadecimal identifiers of partitions which use this field in the routing expression.
            type: array
            items:
              type: string
    ListFieldNamesResponse:
      type: object
      required:
      - data
      properties:
        data:
          description: List of all field names including both built-in and custom ones.
          type: array
          items:
            $ref: '#/components/schemas/FieldName'
    ListCustomFieldsResponse:
      type: object
      required:
      - data
      properties:
        data:
          description: List of fields with their usages.
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
    ListBuiltinFieldsResponse:
      type: object
      required:
      - data
      properties:
        data:
          description: List of fields with their usages.
          type: array
          items:
            $ref: '#/components/schemas/BuiltinField'
    DroppedField:
      allOf:
        - $ref: '#/components/schemas/FieldName'
    ListDroppedFieldsResponse:
      type: object
      required:
      - data
      properties:
        data:
          description: List of fields which have not been manually created and their values are being dropped.
          type: array
          items:
            $ref: '#/components/schemas/DroppedField'
    FieldQuotaUsage:
      type: object
      required:
      - quota
      - remaining
      properties:
        quota:
          description: Max number of allowed entries.
          type: integer
          format: int32
          example: 200
        remaining:
          description: Number of currently unused entries.
          type: integer
          format: int32
          example: 121
    Source:
      type: object
      required:
      - sourceId
      - sourceName
      properties:
        sourceId:
          description: Identifier of a source.
          type: string
          example: "000000000000000F"
        sourceName:
          description: Name of a source.
          type: string
          example: "Collector"
    GetSourcesResponse:
      type: object
      required:
      - data
      properties:
        data:
          description: List of sources.
          type: array
          items:
            $ref: '#/components/schemas/Source'
        next:
          description: Next continuation token.
          type: string
    Collector:
      type: object
      required:
      - collectorId
      - collectorName
      properties:
        collectorId:
          description: Identifier of a collector.
          type: string
          example: "000000000000000F"
        collectorName:
          description: Name of a collector.
          type: string
          example: "SyslogCollector"
    GetCollectorsResponse:
      type: object
      required:
      - data
      properties:
        data:
          description: List of collectors.
          type: array
          items:
            $ref: '#/components/schemas/Collector'
        next:
          description: Next continuation token.
          type: string
