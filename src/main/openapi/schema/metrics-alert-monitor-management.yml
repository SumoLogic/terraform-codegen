paths:
  v1:
    metricsAlertMonitors:
      get:
        description: >-
          Get a list of all metrics monitors in the organization. The response is paginated with a default limit of
          100 monitors per page.
        tags:
        - metricsAlertMonitorManagement
        summary: Get a list of metrics monitors.
        operationId: getMonitors
        parameters:
        - name: limit
          description: Limit the number of monitors returned in the response.
          required: false
          in: query
          schema:
            default: 100
            minimum: 1
            type: integer
            maximum: 1000
            format: int32
        - name: token
          description: >-
            Continuation token to get the next page of results. A page object with the next continuation token is returned
            in the response body. Subsequent GET requests should specify the continuation token to get the next page
            of results. `token` is set to null when no more pages are left.
          required: false
          in: query
          schema:
            type: string
        responses:
          200:
            description: List of metrics monitors.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/MetricsMonitorsResponse'
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

      post:
        description: >-
          Create a new metrics monitor.
        tags:
        - metricsAlertMonitorManagement
        summary: Create a new metrics monitor.
        operationId: createMonitor
        parameters: []
        requestBody:
          description: Data to create a new metrics monitor.
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsMonitorDefinition'
        responses:
          200:
            description: The metrics monitor has been created.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/MetricsMonitorInstance'
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

    metricsAlertMonitorId:
      get:
        description: >-
          Get a metrics monitor with the given identifier.
        tags:
        - metricsAlertMonitorManagement
        summary: Get a metrics monitor.
        operationId: getMonitor
        parameters:
        - name: id
          description: Identifier of the monitor to return.
          required: true
          in: path
          schema:
            type: string
          example: "00000005FA2A0C3"
        responses:
          200:
            description: Metrics monitor object that was requested.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/MetricsMonitorInstance'
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

      put:
        description: >-
          Update an existing metrics monitor.
        tags:
        - metricsAlertMonitorManagement
        summary: Update a metrics monitor.
        operationId: updateMonitor
        parameters:
        - name: id
          description: Identifier of the monitor to update.
          required: true
          in: path
          schema:
            type: string
          example: "00000005FA2A0C3"
        requestBody:
          description: Information to update the existing metrics monitor.
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsMonitorDefinition'
        responses:
          200:
            description: The metrics monitor was updated.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/MetricsMonitorInstance'
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

      delete:
        description: >-
          Delete an existing metrics monitor.
        tags:
        - metricsAlertMonitorManagement
        summary: Delete a metrics monitor.
        operationId: deleteMonitor
        parameters:
        - name: id
          description: Identifier of the monitor to delete.
          required: true
          in: path
          schema:
            type: string
          example: "00000005FA2A0C3"
        responses:
          204:
            description: Metrics monitor was deleted.
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

      mute:
        post:
          description: >-
            Mute a metrics monitor.
          tags:
            - metricsAlertMonitorManagement
          summary: Mute a metrics monitor.
          operationId: mute
          parameters:
            - name: id
              description: Identifier of the monitor to mute.
              required: true
              in: path
              schema:
                type: string
              example: "00000005FA2A0C3"
          requestBody:
            description:
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/MuteMetricsMonitorRequest'
          responses:
            200:
              description: Metrics monitor was muted.
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/MetricsMonitorMuteStatus'
            default:
              description: Operation failed with an error.
              content:
                application/json:
                  schema:
                    $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

      unmute:
        post:
          description: >-
            Unmute a metrics monitor.
          tags:
            - metricsAlertMonitorManagement
          summary: Unmute a metrics monitor.
          operationId: unmute
          parameters:
            - name: id
              description: Identifier of the monitor to unmute.
              required: true
              in: path
              schema:
                type: string
              example: "00000005FA2A0C3"
          responses:
            200:
              description: Metrics monitor was unmuted.
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/MetricsMonitorMuteStatus'
            default:
              description: Operation failed with an error.
              content:
                application/json:
                  schema:
                    $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

components:
  schemas:
    MetricsMonitorsResponse:
      type: object
      required:
      - data
      properties:
        data:
          description: List of metrics monitors.
          type: array
          items:
            $ref: '#/components/schemas/MetricsMonitorInstance'
        next:
          description: Next continuation token.
          type: string

    MetricsMonitorDefinition:
      type: object
      required:
      - name
      - alertQueries
      - timezone
      - monitorRules
      properties:
        name:
          description: Monitor name.
          type: string
          example: "Host disk space low"
          minLength: 1
          maxLength: 255
        description:
          description: Monitor description.
          type: string
          example: "Fires if our estimation for running out of disk space is one day."
          minLength: 0
          maxLength: 4095
        alertQueries:
          description: Monitor queries.
          type: array
          items:
            $ref: '#/components/schemas/MetricsAlertQuery'
          maxItems: 6
        timezone:
          description: >
            Monitor time zone in
            [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List) format.
            Date time ranges shown in emails and sent to webhooks are expressed in this time zone.
          type: string
          example: 'America/Los_Angeles'
        monitorRules:
          description: Monitor rules express conditions when to fire an alert. At least one rule is required.
          type: object
          $ref: '#/components/schemas/MonitorRules'

    MetricsMonitorInstance:
      type: object
      allOf:
      - required:
        - id
        - monitorDefinition
        - muteStatus
        properties:
          monitorDefinition:
            description: The metric monitor object.
            type: object
            $ref: '#/components/schemas/MetricsMonitorDefinition'
          id:
            description: Identifier of the metrics monitor.
            type: string
            example: "0A3B519FF42A0C3"
          orgId:
            description: Identifier of the organization.
            type: string
            example: "0000000FF42A0C3"
          status:
            description: >
              Status of the monitor.
              Can be either `Initialized`, `Ok`, `Warning`, `Critical`, `MissingData`, or `Disabled`.
            type: string
            example: "Initialized"
          statusLastUpdatedAt:
            description: Date and time the status last changed in ISO 8601 format.
            type: string
            format: date-time
            example: "1970-01-01T00:00:00Z"
          muteStatus:
            description: Status of the mute setting.
            type: object
            $ref: '#/components/schemas/MetricsMonitorMuteStatus'
      - $ref: './generic-models.yml#/components/schemas/MetadataModel'

    MetricsAlertQuery:
      type: object
      required:
      - rowId
      - query
      properties:
        rowId:
          description: Row identifier.
          type: string
          example: "A"
          maxLength: 127
        query:
          description: A monitor query.
          type: string
          example: "_sourceCategory=host_metrics metric=cpu_user average | avg by _sourceHost"
          maxLength: 4095

    MonitorRules:
      type: object
      properties:
        warningRule:
          description: Conditions for firing a warning notificaiton.
          type: object
          $ref: '#/components/schemas/ThresholdRule'
        criticalRule:
          description: Conditions for firing a critical notificaiton.
          type: object
          $ref: '#/components/schemas/ThresholdRule'
        missingDataRule:
          description: Conditions for the missing data alert.
          type: object
          $ref: '#/components/schemas/MissingDataRule'

    ThresholdRule:
      type: object
      required:
        - thresholdType
        - threshold
        - duration
      properties:
        thresholdType:
          description: >-
            One of: `Above`, `Below`.
          type: string
          example: "Above"
        threshold:
          description: Threshold for the monitor, data points above or below this threshold are treated as outliers.
          type: number
          format: double
          example: 80
        duration:
          description: >-
            A period of time, in which the alert condition has to remain true
            before the notification is triggered.
            If a single threshold violation is enough to trigger the alert, set this field to 0.
            Currently, the only accepted values are `0`, `5m`, `10m`, `15m`, `30m` and `60m`
            (`m` suffix means minutes).
          type: string
          minLength: 1
          pattern: "^(0|5m|10m|15m|30m|60m)$"
          example: "15m"
        notifications:
          description: >-
            Notifications to send once an alert is triggered.
          type: object
          $ref: '#/components/schemas/Notifications'

    MissingDataRule:
      type: object
      required:
        - affectedTimeSeries
        - duration
      properties:
        affectedTimeSeries:
          description: >
            Defines when an alert should be raised: either when all or any time series are missing data.
            Accepted values for this field are: `all` and `any`.
          type: string
          example: all
        duration:
          description: A time window in milliseconds. The minimum value is equal to the query quantization.
          type: integer
          format: int64
          example: 300000
          minimum: 60000
          maximum: 3600000
        notifications:
          description: >-
            Notifications to send once an alert is triggered.
          type: object
          $ref: '#/components/schemas/Notifications'

    Notifications:
      type: object
      properties:
        emailNotifications:
          description: Email notification details.
          type: object
          $ref: '#/components/schemas/EmailNotification'
        webhookNotifications:
          description: Webhook notification details.
          type: array
          items:
            $ref: '#/components/schemas/WebhookNotification'
          maxItems: 50

    EmailNotification:
      type: object
      nullable: true
      required:
        - recipients
      properties:
        recipients:
          description: List of notification recipients' email addresses.
          type: array
          items:
            type: string
            maxLength: 127
          maxItems: 50
          example: ["alice@example.com", "bob@example.com"]

    WebhookNotification:
      type: object
      nullable: false
      required:
        - webhookId
      properties:
        webhookId:
          description: Identifier of the webhook.
          type: string
          example: "0000000B3E2A0C3"
          minLength: 16
          maxLength: 16
        payload:
          description: Webhook's payload.
          type: string
          example: "{}"

    MuteMetricsMonitorRequest:
      type: object
      properties:
        muteUntil:
          type: string
          format: date-time
          nullable: true
          description: >
            Monitor will be muted until this date.
            Date is in [RFC3339](https://tools.ietf.org/html/rfc3339) format.

            Specify `null` to mute a monitor indefinitely.
          example: '2020-01-08T10:28:19Z'

    MetricsMonitorMuteStatus:
      type: object
      required:
      - isMuted
      properties:
        isMuted:
          description: True if the monitor is muted.
          type: boolean
          example: false
        mutedAt:
          description: Date and time the monitor was last muted in [RFC3339](https://tools.ietf.org/html/rfc3339) format.
          type: string
          format: date-time
          example: "1970-01-01T00:00:00Z"
        mutedUntil:
          description: >
            Date and time when the monitor will be unmuted
            in [RFC3339](https://tools.ietf.org/html/rfc3339) format.

            `null` when the monitor is muted indefinitely.
          type: string
          nullable: true
          format: date-time
          example: "1970-01-01T12:34:56Z"
