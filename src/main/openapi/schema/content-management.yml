paths:
  v2:
    content:
      contentId:
        # /content/{id}/export
        export:
          post:
            summary: Start a content export job.
            description: >-
              Schedule an asynchronous export of content with the given identifier. If the content item is a folder,
              everything under the folder is exported recursively with folder as the root. The results from this export
              are compatible with the Library import feature in the Sumo user interface as well as the API content import job.
            operationId: beginAsyncExport
            tags:
            - contentManagement
            parameters:
            - name: id
              description: >-
                The identifier of the content item to export. Identifiers from the Library in the Sumo user interface
                are provided in decimal format which is incompatible with this API. The identifier needs to be in hexadecimal
                format.
              required: true
              in: path
              schema:
                type: string
            - name: isAdminMode
              description: Set this to "true" if you want to perform the request as a Content Administrator.
              required: false
              in: header
              schema:
                type: string
            responses:
              200:
                description: Export job has been scheduled.
                content:
                  application/json:
                    schema:
                      $ref: './generic-models.yml#/components/schemas/BeginAsyncJobResponse'
              default:
                description: Operation failed with an error.
                content:
                  application/json:
                    schema:
                      $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
        # /content/{contentId}/export/{jobId}/status
        exportStatus:
          get:
            summary: Content export job status.
            description: >-
              Get the status of an asynchronous content export request for the given job identifier. On success, use
              the [getExportResult](#operation/getAsyncExportResult) endpoint to get the result of the export job.
            operationId: getAsyncExportStatus
            tags:
            - contentManagement
            parameters:
            - name: contentId
              description: The identifier of the exported content item.
              required: true
              in: path
              schema:
                type: string
            - name: jobId
              description: The identifier of the asynchronous export job.
              required: true
              in: path
              schema:
                type: string
            - name: isAdminMode
              description: Set this to "true" if you want to perform the request as a Content Administrator.
              required: false
              in: header
              schema:
                type: string
            responses:
              200:
                description: The status of the export job.
                content:
                  application/json:
                    schema:
                      $ref: './generic-models.yml#/components/schemas/AsyncJobStatus'
              default:
                description: Operation failed with an error.
                content:
                  application/json:
                    schema:
                      $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
        # /content/{contentId}/export/{jobId}/result
        exportResult:
          get:
            summary: Content export job result.
            description: >-
              Get results from content export job for the given job identifier. The results from this export are incompatible
              with the Library import feature in the Sumo user interface.
            operationId: getAsyncExportResult
            tags:
            - contentManagement
            parameters:
            - name: contentId
              description: The identifier of the exported content item.
              required: true
              in: path
              schema:
                type: string
            - name: jobId
              description: The identifier of the asynchronous job.
              required: true
              in: path
              schema:
                type: string
            - name: isAdminMode
              description: Set this to "true" if you want to perform the request as a Content Administrator.
              required: false
              in: header
              schema:
                type: string
            responses:
              200:
                description: The result of export job.
                content:
                  application/json:
                    schema:
                      $ref: './content-synchronization-models.yml#/components/schemas/ContentSyncDefinition'
              default:
                description: Operation failed with an error.
                content:
                  application/json:
                    schema:
                      $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

        # /content/{contentId}/delete
        delete:
          delete:
            summary: Start a content deletion job.
            description: >-
              Start an asynchronous content deletion job with the given identifier.
            operationId: beginAsyncDelete
            tags:
            - contentManagement
            parameters:
            - name: id
              description: >-
                Identifier of the content to delete. Identifiers from the Library in the Sumo user interface are provided
                in decimal format which is incompatible with this API. The identifier needs to be in hexadecimal format.
              required: true
              in: path
              schema:
                type: string
            - name: isAdminMode
              description: Set this to "true" if you want to perform the request as a Content Administrator.
              required: false
              in: header
              schema:
                type: string
            responses:
              200:
                description: Deletion job has been scheduled.
                content:
                  application/json:
                    schema:
                      $ref: './generic-models.yml#/components/schemas/BeginAsyncJobResponse'
              default:
                description: Operation failed with an error.
                content:
                  application/json:
                    schema:
                      $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
        # /content/{contentId}/delete/{jobId}/status
        deleteStatus:
          get:
            summary: Content deletion job status.
            description: >-
              Get the status of an asynchronous content deletion job request for the given job identifier.
            operationId: getAsyncDeleteStatus
            tags:
            - contentManagement
            parameters:
            - name: id
              description: Identifier of the content to delete.
              required: true
              in: path
              schema:
                type: string
            - name: jobId
              description: The identifier of the asynchronous job.
              required: true
              in: path
              schema:
                type: string
            - name: isAdminMode
              description: Set this to "true" if you want to perform the request as a Content Administrator.
              required: false
              in: header
              schema:
                type: string
            responses:
              200:
                description: The status of the content deletion job.
                content:
                  application/json:
                    schema:
                      $ref: './generic-models.yml#/components/schemas/AsyncJobStatus'
              default:
                description: Operation failed with an error.
                content:
                  application/json:
                    schema:
                      $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

        #/content/{id}/copy?destination={destination} endpoint
        copy:
          post:
            summary: Start a content copy job.
            description: >-
              Start an asynchronous content copy job with the given identifier to the destination folder. If the content
              item is a folder, everything under the folder is copied recursively.
            operationId: beginAsyncCopy
            tags:
            - contentManagement
            parameters:
            - name: id
              description: >-
                The identifier of the content item to copy. Identifiers from the Library in the Sumo user interface are
                provided in decimal format which is incompatible with this API. The identifier needs to be in hexadecimal
                format.
              required: true
              in: path
              schema:
                type: string
            - name: destinationFolder
              description: The identifier of the destination folder.
              required: true
              in: query
              schema:
                type: string
            - name: isAdminMode
              description: Set this to "true" if you want to perform the request as a Content Administrator.
              required: false
              in: header
              schema:
                type: string
            responses:
              200:
                description: Content copy job has been scheduled.
                content:
                  application/json:
                    schema:
                      $ref: './generic-models.yml#/components/schemas/BeginAsyncJobResponse'
              default:
                description: Operation failed with an error.
                content:
                  application/json:
                    schema:
                      $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
        #/content/{id}/copy/{jobId}/status endpoint
        copyStatus:
          get:
            summary: Content copy job status.
            description: >
              Get the status of the copy request with the given job identifier. On success, field `statusMessage`
              will contain identifier of the newly copied content in format: `id: {hexIdentifier}`.
            operationId: asyncCopyStatus
            tags:
            - contentManagement
            parameters:
            - name: id
              description: The identifier of the content which was copied.
              required: true
              in: path
              schema:
                type: string
            - name: jobId
              description: The identifier of the asynchronous copy request job.
              required: true
              in: path
              schema:
                type: string
            - name: isAdminMode
              description: Set this to "true" if you want to perform the request as a Content Administrator.
              required: false
              in: header
              schema:
                type: string
            responses:
              200:
                description: The status of the content copy job.
                content:
                  application/json:
                    schema:
                      $ref: './generic-models.yml#/components/schemas/AsyncJobStatus'
                    example:
                      status: Success
                      statusMessage: 'id: 0000000000000197'
              default:
                description: Operation failed with an error.
                content:
                  application/json:
                    schema:
                      $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
        # /content/{id}/move?destination={destinationFolderId}
        move:
          post:
            summary: Move an item.
            description: >
              Moves an item from its current location to another folder.
            operationId: moveItem
            tags:
            - contentManagement
            parameters:
            - name: destinationFolderId
              description: Identifier of the destination folder.
              required: true
              in: query
              schema:
                type: string
            - name: id
              description: Identifier of the item the user wants to move.
              required: true
              in: path
              schema:
                type: string
            responses:
              200:
                description: Content was moved successfully.
              default:
                description: Operation failed with an error.
                content:
                  application/json:
                    schema:
                      $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

        # /content/{id}/path
        path:
          get:
            summary: Get path of an item.
            description: >
              Get full path of a content item with the given identifier.
            operationId: getPathById
            tags:
              - contentManagement
            parameters:
              - name: contentId
                description: Identifier of the content item to get the path.
                required: true
                in: path
                schema:
                  type: string
            responses:
              200:
                description: Full path of the content item.
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/ContentPath'
              default:
                description: Operation failed with an error.
                content:
                  application/json:
                    schema:
                      $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

      # /content/delete
      delete:
        post:
          x-visibility: private
          summary: Bulk asynchronous content deletion.
          description: Asynchronously delete content items with the supplied identifiers.
          operationId: beginBulkAsyncDelete
          tags:
            - contentManagement
          requestBody:
            description: Identifiers of the content to delete.
            required: true
            content:
              application/json:
                schema:
                  $ref: './generic-models.yml#/components/schemas/IdArray'
          parameters:
            - name: isAdminMode
              description: Set this to "true" if you want to perform the request as a Content Administrator.
              required: false
              in: header
              schema:
                type: string
          responses:
            200:
              description: Maps of contentIds to jobIds and contentIds to error messages
              content:
                application/json:
                  schema:
                    $ref: './generic-models.yml#/components/schemas/BulkBeginAsyncJobResponse'
            default:
              description: Operation failed with an error.
              content:
                application/json:
                  schema:
                    $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

        # /content/delete/status
        status:
          post:
            x-visibility: private
            summary: Bulk status check for asynchronous content deletion.
            description: Check the status of multiple running asynchronous delete jobs.
            operationId: getBulkDeleteStatus
            tags:
              - contentManagement
            requestBody:
              description: Identifiers of the delete jobs.
              required: true
              content:
                application/json:
                  schema:
                    $ref: './generic-models.yml#/components/schemas/IdArray'
            parameters:
              - name: isAdminMode
                description: Set this to "true" if you want to perform the request as a Content Administrator.
                required: false
                in: header
                schema:
                  type: string
            responses:
              200:
                description: Maps of contentIds to job statuses and contentIds to error messages
                content:
                  application/json:
                    schema:
                      $ref: './generic-models.yml#/components/schemas/BulkAsyncStatusResponse'
              default:
                description: Operation failed with an error.
                content:
                  application/json:
                    schema:
                      $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
      folderId:
        # /content/folders/{id}/import
        import:
          post:
            summary: Start a content import job.
            description: >-
              Schedule an asynchronous import of content inside an existing folder with the given identifier. Import
              requests can be used to create or update content within a folder. Content items need to have a unique name
              within their folder. If there is already a content item with the same name in the folder, you can set the
              `overwrite` parameter to `true` to overwrite existing content items. By default, the `overwrite` parameter
              is set to `false`, where the import will fail if a content item with the same name already exist.
            operationId: beginAsyncImport
            tags:
            - contentManagement
            parameters:
            - name: folderId
              description: >-
                The identifier of the folder to import into. Identifiers from the Library in the Sumo user interface
                are provided in decimal format which is incompatible with this API. The identifier needs to be in hexadecimal
                format.
              required: true
              in: path
              schema:
                type: string
            - name: isAdminMode
              description: Set this to "true" if you want to perform the request as a Content Administrator.
              required: false
              in: header
              schema:
                type: string
            - name: overwrite
              description: Set this to "true" to overwrite a content item if the name already exists.
              required: false
              in: query
              schema:
                default: false
                type: boolean
            requestBody:
              description: The content to import.
              required: true
              content:
                application/json:
                  schema:
                    $ref: './content-synchronization-models.yml#/components/schemas/ContentSyncDefinition'
            responses:
              200:
                description: Import job has been scheduled.
                content:
                  application/json:
                    schema:
                      $ref: './generic-models.yml#/components/schemas/BeginAsyncJobResponse'
              default:
                description: The operation failed with an error.
                content:
                  application/json:
                    schema:
                      $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
          # /content/folders/{id}/import/{jobId}/status
          status:
            get:
              summary: Content import job status.
              description: Get the status of a content import job for the given job identifier.
              operationId: getAsyncImportStatus
              tags:
              - contentManagement
              parameters:
              - name: folderId
                description: The identifier of the folder to import into.
                required: true
                in: path
                schema:
                  type: string
              - name: jobId
                description: The identifier of the import request.
                required: true
                in: path
                schema:
                  type: string
              - name: isAdminMode
                description: Set this to "true" if you want to perform the request as a Content Administrator.
                required: false
                in: header
                schema:
                  type: string
              responses:
                200:
                  description: The status of the import job.
                  content:
                    application/json:
                      schema:
                        $ref: './generic-models.yml#/components/schemas/AsyncJobStatus'
                default:
                  description: The operation failed with an error.
                  content:
                    application/json:
                      schema:
                        $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
      path:
        get:
          summary: Get content item by path.
          description: >-
            Get a content item corresponding to the given path.
          operationId: getItemByPath
          tags:
            - contentManagement
          parameters:
            - name: path
              description: Path of the content item to retrieve.
              required: true
              in: query
              schema:
                type: string
              example: "/Library/Users/user@demo.com/SampleFolder"
          responses:
            200:
              description: Content item corresponding to the given path.
              content:
                application/json:
                  schema:
                    $ref: './generic-models.yml#/components/schemas/Content'
            default:
              description: Operation failed with an error.
              content:
                application/json:
                  schema:
                    $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
components:
  schemas:
    ContentPath:
      type: object
      required:
        - path
      properties:
        path:
          description: Path of the content item.
          type: string
          example:
            "/Library/Users/user@test.com/SampleFolder"
