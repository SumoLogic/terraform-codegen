openapi: "3.0.0"
info:
  version: 1.0.0
  title: Sample Petstore
  description: A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: http://petstore.swagger.io/api

tags:
  - name: petManagement
    x-displayName: Pet
    description: Pet Management API.

paths:
  /pets:
    get:
      description: |
        Returns all pets from the system that the user has access to
      operationId: findPets
      tags:
        - petManagement
      parameters:
        - name: tags
          in: query
          description: tags to filter by
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      x-tf-create: createPet
      description: Creates a new pet in the store. Duplicates are allowed
      operationId: createPet
      tags:
        - petManagement
      requestBody:
        description: Pet to add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPet'
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /pets/{id}:
    get:
      x-tf-read: getPet
      description: Returns a user based on a single ID, if the user does not have access to the pet
      operationId: getPet
      tags:
        - petManagement
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      x-tf-update: updatePet
      description: Update a pet in the store.
      operationId: updatePet
      tags:
        - petManagement
      parameters:
        - name: id
          in: path
          description: ID of pet to update
          required: true
          schema:
            type: string
      requestBody:
        description: Pet to update in the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPet'
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      x-tf-delete: deletePet
      description: deletes a single pet based on the ID supplied
      operationId: deletePet
      tags:
        - petManagement
      parameters:
        - name: id
          in: path
          description: ID of pet to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: pet deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Pet:
      x-tf-generated-properties: id,name,tag
      x-tf-resource-name: Pet
      type: object
      allOf:
        - $ref: '#/components/schemas/NewPet'
        - type: object
          required:
          - id
          properties:
            id:
              type: string

    NewPet:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: "Rupert"
        tag:
          type: string
          example: "bear"

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string